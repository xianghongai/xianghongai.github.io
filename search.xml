<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>
      <![CDATA[Adobe XD 操作]]>
    </title>
    <url>%2Ftech%2Fadobe-xd.html</url>
    <content type="text">
      <![CDATA[Adobe XD ，简单、优雅，功能介于 Axure 和 Sketch 之间，既能 Prototype 又能 UI。 目前 14.0.42.14 版本，更多功能实现是 UI 设计，原型交互效果这部分不及 Flinto、Principle、ProtoPie这类工具，Adobe XD 基础部分已经夯实，Apple、巨硬 Fluent、Google Materail 几个大厂已经有 XD 资源包，加上免费策略，应该是设计界的 Visual Studio Code，冉冉新星。 了解 “画布”、“图层”、“对象”、“编组”、“路径”、“锚点” 等图形处理术语； 工具箱按键：选择(V)、矩形(R)、椭圆形(E)、线条(L)、画笔(P)、文字(T)、画布(A)、缩放(Z) 滚动视图：按住 Space/空格 键，抓手工具，以滚动视图；按住 Shift+鼠标滚轮，左右滚动视图； 缩放： 按住 Ctrl+Shift+鼠标滚轮，快速缩放；好用 按一下 Z 键，点击、拖动放大；按住 Alt 键不放，点击、拖动缩小；难用 视图辅助用按键: Ctrl+0/1/2/3/-/+ 对应 所有/100%/200%/当前选择画布/缩小/放大 选择： Shift 加左键点击挑选多个对象；按住左键拖，范围内选择多个图层； 绘制/调整对象大小 按 Shift 键，从对象“左上”保持宽高比 按 Alt+Shift 键，从对象“中心”保持宽高比 按 Alt 键，从对象“中心”对称调整 复制：Alt + 左键拖，复制图层；Alt+Shift+左键拖，限定方向复制图层； Ctrl+D 再制； 移动：按 Shift 键可限定方向移动对象；按 Shift+↑↓←→ 以每 10px 单位移动对象；按 Ctrl+Shift+↑↓←→ 将对象移至画布最边上； 旋转：按 Shift 键以每 15° 旋转对象；一般加 Shift 上档键可视为约束操作； 对齐、分布：选中对象，点右侧“对齐”面板图标实现各种对齐和分布； 层次排列: Ctrl+[/Ctrl+]，图层后/前移一层，加一个 Shift 就是移至“底/顶”； 编组： 对图层进行编组，为了维护、复用、导出；选择对象，鼠标右键→“Group”/Ctrl+G； 锁定： 做完防止手误移动，可 鼠标右键→“Lock”/Ctrl+L 锁定对象； Symbols：组件化，对一个/组对象 鼠标右键→“Make Symbols”/Ctrl+K，在左侧工具栏下方 “Assets” 面板中，可以看到这个 Symbols，可以拖入画板复用； 色卡：选择“颜色”时候，确定了要用这个色彩，就点一下 “+” Save Color Swatch，将常用的色彩保存到色卡； 色彩资源：选中一个对象，鼠标右键→“Add Color to Assets”/Shift+Ctrl+C，或在 “Assets” 面板， “Colors” 面板点 “+”，将颜色参数化；对应项鼠标右键→“Edit”，可以统一调整； 文字资源：选中一个文本对象，鼠标右键→“Add Character Styles to Assets”/Shift+Ctrl+T，或在 “Assets” 面板， “Character Styles” 面板点 “+”，将文字排版参数化；对应项鼠标右键→“Edit”，可以统一调整； 蒙版遮盖：先 Ctrl+Shift+i 导入一张图形素材(后)，再画一个形状用作蒙版(前)，选中这两个对象，鼠标右键→“Mask With Shape”/Ctrl+Shift+M，将图形嵌入形状中，双击进入可拖动图形位置；鼠标右键→“Ungroup Mask”/Ctrl+Shift+G 可取消遮罩； 重复网格：选中一个/组对象，右侧操作面板 “Repeat Grid” ，拖动以重复； 透明度：1 = 10％，2 = 20％，… 0 = 100%； 布尔运算组合对象：两个形状，可以进行 “Add”、“Subtract/减去顶层”、“Intersect/相交”、“Exclude Overlap/排除重叠”；取消编组可复原； 锚点 双击形状，BackSpace 键可删除路径中选中的锚点，用以生成绘制其它形状 双击锚点，在曲线和角度之间切换 按 Alt 键拖动曲线手柄，可控制手柄范围 画布，点击标题可选择；按住 Shift 可选择多个，可进行移动、对齐操作；Ctrl+D可再制画布； 导出：可将画布、对象导出为各种格式图形文档； 原型设计和预览：就是加页面之间的跳转与过渡效果，自己点点点琢磨一下； 边做边保存，习惯性按 Ctrl+S，这应该是计算机上操作所有软件的习惯。 示例文件 Adobe XD 用户指南]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>design</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[也致第一次安装Rime的你]]>
    </title>
    <url>%2Ftech%2Frime.html</url>
    <content type="text">
      <![CDATA[我的需求是需要一套跨平台的输入方案: 因此，我选择了 Rime。 0、安装先按系统平台安装Rime，本笔记以Windows平台/五笔输入方案为例 (配置下载，提取码 1024.)： 下载安装小狼毫 Weasel和编辑器 visual studio code。保证文件UTF-8编码 安装Rime之后，有默认的预置输入方案，各输入方案切换初始快捷键是Ctrl+~。 如果没有适合自己的输入方案，看完本笔记第2、3、4章节后，在浏览器中打开Plum项目，Ctrl+F查找并下载相关输入方案到用户配置目录，重新部署。 如：查找wubi，打开rime-wubi项目，点绿色按钮Download ZIP到桌面解压，把几个*.yaml后缀文件剪切到%appdata%\Rime (复制，Windows+R运行中粘贴回车即可进入) 目录，重新部署。 Plum 是 Rime 配置管理器和输入模式库。 1、认识“Rime”要配置和操控 Rime，首先要知道它是什么， Rime： 一套文字输入解决方案，由基础引擎*、跨操作平台发行*、多种输入方案*组成， 支持“拼音、双拼、注音、声调、五笔、仓颉”等音码和形码输入； 支持“吴语、粤语，中古汉语”等多种方言拼音； 支持 Windows、Linux、Android、Mac OS X 等作业平台。 ibus-rime → Linux Weasel/小狼毫 → Windows Squirrel/鼠须管 → Mac OS X 同文輸入法 → Android 繁体拼音能正确的输入繁体字。 上面有标*号几个部分，就是我们要配置调教的部分。 2、认识“部署”与“同步”每当更改了配置文件，就要进行一次部署以生效预期功能，同时执行一次同步以备份相关配置。 Windows 部署： 在开始菜单中找到 小狼毫輸入法 → 【小狼毫】重新部署，执行即生效； 在C:\ProgramData\Microsoft\Windows\Start Menu\Programs\小狼毫輸入法 中执行 【小狼毫】重新部署； 如果配置中有开启托盘图标，右键选择重新部署。 其它保作系统更简单，如iBus在输入法切换下拉菜单即可部署，鼠鬚管在系统语言文字选单中选择重新部署 同步亦然，这里同步只是根据用户配置目录installation.yaml中的installation_id和sync_dir生成了配置和词典文件，至于同步之后备份在何处，是需要用户自己安排的，如各SaaS厂商的云盘。 3、认识“源文件目录”和“用户配置目录”“源文件目录”和“用户配置目录”是整个输入方案的配置文件所在目录。 输入方案源文件目录，升级或重装会被替换，用户不能修改：123【中州韻】 /usr/share/rime-data/【小狼毫】 &quot;安装目录\data&quot;【鼠鬚管】 &quot;/Library/Input Methods/Squirrel.app/Contents/SharedSupport/&quot; 输入方案用户配置目录，用户可以部分修改：1234【中州韻】 ~/.config/ibus/rime/ ~/.config/fcitx/rime/【小狼毫】 &quot;%appdata%\Rime&quot;【鼠鬚管】 ~/Library/Rime/ 4、认识“用户配置目录”数据文件分布数据文件和目录在各版本中可能会有不同。 主要文件 default.yaml，全局设定 weasel.yaml，发行版设定 installation.yaml，安装信息(可配置同步目录) user.yaml，用户状态信息 *.schema.yaml，输入方案 *.dict.yaml，输入方案配套的词典源文件 *.custom.yaml+，用户对Rime全局配置、各输入方案配置、自制输入方案等定制文件 用户配置同步目录及词典文件 *.userdb，Rime记录用户输入习惯的目录文件 UUID/，用户配置同步目录 UUID/*.userdb.txt，Rime生成的用以同步的用户词典 Rime编译生成的二进制文件： build/* *.prism.bin，棱镜文件 *.reverse.bin，反查词典 *.table.bin，固态词典 5、折腾要折腾的不是很多，普通用户安装即用，我折腾它主要是按键部分和我开发工具冲突，还有增强输入方案。 我们要配置四个文件，因为以后要升级，不能直接在原作者默认文件内修改和调整，所以要这样建立文件关联： 基础引擎框架配置 default.yaml → default.custom.yaml，输入法按键、方案预选等全局设定 输入方案配置 wubi86.schema.yaml → wubi86.custom.yaml，每种形码、音码输入方案都可以单独配置 增强输入方案配置 symbols.yaml → symbols.custom.yaml，如： /jq 将调用二十四节气名 Windows发行版配置 weasel.yaml → weasel.custom.yaml，如进入相关应用程序，转换为英文状态 我进行的配置有： Control+Alt+F8 调出输入方案设定，原来的 Ctrl+` 会与大部分软件的关键按键冲突 ,、.输入时左右翻页 Enter清屏，;、&#39;，输入时第二、三候选词选定 因为经常编码和用Markdown语法，很多字符为英文状态下字符，如[]()等 /用来触发特殊字符输入，如/fh、/0~9、/jt等，具体参考symbols.custom.yaml文件 Shift+Delete 或 Control+Delete（Mac Shift+Fn+Delete）删除候选词 5.1 目的 覆盖原默认配置 选择和扩展功能 5.2 调教 先三分钟了解一下 yaml 配置文件语言 打开配置目录：Windows + R : $ %appdata%/rime 用 VS Code 编辑器新建四个文件：default.custom.yaml，wubi86.custom.yaml，symbols.custom.yaml，weasel.custom.yaml，这四个文件配置完可以备份一份，方便在其它计算机上用。 5.2.1 基础引擎框架配置 ：default.custom.yaml123456789101112131415161718192021222324252627282930313233343536373839404142434445# 此文档是对 rime 基础引擎框架配置customization: distribution_code_name: Weasel distribution_version: 0.9.30 generator: "Rime::SwitcherSettings" modified_time: "Mon Mar 12 14:30:01 2018" rime_version: 1.3.0patch: "translator/enable_user_dict": false # 关闭用户词典和字频调整 "translator/enable_sentence": false # 关闭码表输入法连打 "key_binder/bindings": - &#123;accept: "Control+Shift+space", toggle: full_shape, when: always&#125; # 全半角切换 - &#123;accept: "Control+period", toggle: ascii_punct, when: always&#125; - &#123;accept: comma, send: Page_Up, when: paging&#125; - &#123;accept: period, send: Page_Down, when: has_menu&#125; "ascii_composer/switch_key": Caps_Lock: commit_code Control_L: inline_ascii Control_R: noop Shift_L: commit_code # 左右Shift上屏编码并切换为英文状态，inline_ascii 设定在有输入时不能切换至英文状态 Shift_R: commit_code # # 原来的 Ctrl + ` 会与大部分软件的关键按键冲突 "switcher/hotkeys": - "Control+Shift+F8" # 除了输入翻页，应该取消所有的默认快捷鍵，输入法就是纯粹的输入用，用户按需分配快捷键，设定默认快捷键会与作业系统及其它软件产生冲突，适得其反，这样与用搜狐、腾讯输入法无二。 # minus/减号，equal/等号，comma/逗号，period/句号，exclam/感叹号，numbersign/井号，percent/百分号，semicolon/分号，apostrophe/单引号 key_binder/bindings: # hotkey switch - &#123; when: always, accept: Shift+space, toggle: full_shape &#125; - &#123; when: always, accept: Control+period, toggle: ascii_punct &#125; - &#123; accept: comma, send: Page_Up, when: paging &#125; - &#123; accept: period, send: Page_Down, when: has_menu &#125; # 选定五笔等输入方案 schema_list: - &#123;schema: wubi86&#125; - &#123;schema: wubi_pinyin&#125; - &#123;schema: wubi_trad&#125; - &#123;schema: luna_pinyin_simp&#125; - &#123;schema: luna_pinyin_tw&#125; - &#123;schema: terra_pinyin&#125; 5.2.2 输入法配置 ：wubi86.custom.yaml1234567891011121314151617181920212223242526# 此文档是对输入法的配置patch: # 标点及特殊表情，引入 symbols.custom.yaml 文件，设定触发条件 'punctuator/import_preset': symbols.custom 'recognizer/patterns/punct': "^/([a-z]+|[0-9])$" # 1.回车清屏(Escape)/上屏一候选词，2.分号上屏二候选词，3.引号上屏三候选词 "key_binder/bindings": - &#123; when: composing, accept: Return, send: Escape &#125; - &#123; when: has_menu, accept: Return, send: Escape &#125; # - &#123;when: composing, accept: space, send: Escape&#125; # - &#123;when: has_menu, accept: space, send: space&#125; - &#123; when: has_menu, accept: semicolon, send: 2 &#125; - &#123; when: has_menu, accept: apostrophe, send: 3 &#125; # 更改‘西文’为‘英文’，‘增广’为‘扩展集’ switches: - name: ascii_mode reset: 0 states: ["中文", "英文"] - name: full_shape states: ["半角", "全角"] - name: ascii_punct states: ["，。", "，．"] - name: extended_charset states: ["通用", "扩展集"] 5.2.3 Windows操作平台配置：weasel.custom.yaml123456789101112131415161718192021222324252627282930313233# 此文档是对rime在Windows平台上的配置customization: distribution_code_name: Weasel distribution_version: 0.9.30 generator: "Weasel::UIStyleSettings" modified_time: "Fri Mar 09 15:08:29 2018" rime_version: 1.1.2# 进入相关应用程序，转换为英文状态patch: "app_options/devenv.exe": ascii_mode: true "app_options/illustrator.exe": ascii_mode: true "app_options/photoshop.exe": ascii_mode: true "app_options/plantsvszombies": ascii_mode: true "app_options/winkawaks.exe": ascii_mode: true "app_options/sublime_text.exe": ascii_mode: true "app_options/Code.exe": ascii_mode: true # 设定主题 "style/color_scheme": ink # 设定显示托盘图标，在调配置时，方便右键图标快速执行“重新部署”，以及其它便捷入口。调配完日常使用就 false 隐藏掉吧。 # 没有托盘图标，Windows+R: $ "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\小狼毫輸入法"，里面有相关操作项 # Windows 10下已经发现问题：切换到小狼毫輸入法，Windows徽标就失灵，必须切换至其它输入法，Ctrl+Shift+Esc 中 “Windows 资源管理器” 鼠标右键“重新启动(R)”，才能正常使用。 "style/display_tray_icon": false 5.2.4 增强输入方案配置：symbols.custom.yaml直接从原作者复制内容过来，进行以下修改： 123456# / 用来触发增强输入，如： /jq 将调用二十四节气名# 星号直接上屏 *# 圆括号为英文状态下的() ，建议文字工作者的你换成中文状态下的（）# 顿号需要按键 \# 井号直接上屏 ## 添加常用网址 代码过多就不贴了； 配置完重新部署，并执行同步以备份相关配置文件。 6、存在问题与选择操作存在极小可能的不稳定性，以及一些兼容性问题，在权衡了隐私性、调教性后，我能接受。 开始菜单中，将“小狼毫算法服務”、“【小狼毫】重新部署”和“【小狼毫】用戶資料同步” Pin to Start，方便应对不稳定性。 扩展阅读与资源： Rime 新手须知的使用方法和技巧 Rime 定制指南(初阶) Rime 输入方案(中阶) Rime 程序开发(高阶) 半月湾C：致第一次安装RIME的你 wikipedia: YAML]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>rime</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[《批处理笔记》系列归档]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action.html</url>
    <content type="text">
      <![CDATA[《批处理笔记》系列归档 批处理笔记(1) - 基础 批处理笔记(2) - 获取目录名、文件名或路径 批处理笔记(3) - 通过文本内容行创建文件夹 批处理笔记(4) - 通过文本内容重命名文件 批处理笔记(5) - 根据文件名自动创建目录存放文件 批处理笔记(6) - 多轮修改文件名 批处理笔记(7) - 文件名操作 批处理笔记(8) - 目录名操作 批处理笔记(9) - 提取所有子目录文件(拷贝/剪切) 批处理笔记(10) - 批量剪辑音频 批处理笔记(11) - 去除指定字符之前或之后的文件名 批处理笔记(12) - 合并文本 批处理笔记(13) - 从视频导出高质量GIF图片 批处理笔记(14) - 路径/时间/字符切分等DEMO操作 批处理笔记(15) - 右键菜单执行批处理文件]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(15) - 右键菜单执行批处理文件]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-15-run-batch-at-folder-context-menu.html</url>
    <content type="text">
      <![CDATA[本篇无知识点，只是将前面写的，弄到右键菜单，方便随时调用。 对以前批处理代码进行调整，主要是对进入目录参数进行调整。 这里把一个批处理文件做两份处理： 在文件上鼠标右键的：set &quot;HandleDir=%~1&quot; 对应到 HKEY_CLASSES_ROOT\Directory\shell\ 在目录空白区域右键的：set &quot;HandleDir=%cd%&quot; 对应到 HKEY_CLASSES_ROOT\Directory\Background\ 执行时分别为： @=&quot;cmd.exe /c C:\\tool\\bat\\dir.bat %1 \&quot;%V\&quot;&quot;； @=&quot;cmd.exe /c C:\\tool\\bat\\dir-bg.bat %cd% \&quot;%V\&quot;&quot; 不贴源码，在网盘下载批处理文件和写入注册表文件(提取码1024)，注册表文件中引用批处理文件地址是C:\tool\bat。 文件命名操作 - file.bat, file-bg.bat 目录命名操作 - dir.bat, dir-bg.bat 获取文件和目录名 - name.bat, name-bg.bat 建立对应路径关系后，执行文件和目录命名操作.reg，然后在目标目录鼠标右键就可以选择相关操作项了。 右键菜单添加命令行入口.reg保存并执行，在任何目录即可调用cmd。此功能跟批处理没关系，可忽略。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677Windows Registry Editor Version 5.00; Remove Settings; [-HKEY_CLASSES_ROOT\Directory\shell\CommandPrompt]; [-HKEY_CLASSES_ROOT\Directory\Background\shell\CommandPrompt]; [-HKEY_CLASSES_ROOT\Drive\shell\CommandPrompt]; [-HKEY_CLASSES_ROOT\LibraryFolder\background\shell\CommandPrompt]; Command Prompt; ========================================================[HKEY_CLASSES_ROOT\Directory\shell\CommandPrompt]"MUIVerb"="Command Prompt""Icon"="cmd.exe"[HKEY_CLASSES_ROOT\Directory\shell\CommandPrompt\command]@="cmd.exe /s /k pushd \"%V\""[HKEY_CLASSES_ROOT\Directory\Background\shell\CommandPrompt]"MUIVerb"="Command Prompt""Icon"="cmd.exe"[HKEY_CLASSES_ROOT\Directory\Background\shell\CommandPrompt\command]@="cmd.exe /s /k pushd \"%V\""[HKEY_CLASSES_ROOT\Drive\shell\CommandPrompt]"MUIVerb"="Command Prompt""Icon"="cmd.exe"[HKEY_CLASSES_ROOT\Drive\shell\CommandPrompt\command]@="cmd.exe /s /k pushd \"%V\""[HKEY_CLASSES_ROOT\LibraryFolder\background\shell\CommandPrompt]"MUIVerb"="Command Prompt""Icon"="cmd.exe"[HKEY_CLASSES_ROOT\LibraryFolder\background\shell\CommandPrompt\command]@="cmd.exe /s /k pushd \"%V\""; Remove Settings;[-HKEY_CLASSES_ROOT\Directory\shell\runas];[-HKEY_CLASSES_ROOT\Directory\Background\shell\runas];[-HKEY_CLASSES_ROOT\Drive\shell\runas];[-HKEY_CLASSES_ROOT\LibraryFolder\background\shell\runas]; Command Prompt Administrator; ========================================================[HKEY_CLASSES_ROOT\Directory\shell\runas]"MUIVerb"="Command Prompt Administrator(&amp;X)""Icon"="cmd.exe""HasLUAShield"=""[HKEY_CLASSES_ROOT\Directory\shell\runas\command]@="cmd.exe /s /k pushd \"%V\""[HKEY_CLASSES_ROOT\Directory\Background\shell\runas]"MUIVerb"="Command Prompt Administrator(&amp;X)""Icon"="cmd.exe""HasLUAShield"=""[HKEY_CLASSES_ROOT\Directory\Background\shell\runas\command]@="cmd.exe /s /k pushd \"%V\""[HKEY_CLASSES_ROOT\Drive\shell\runas]"MUIVerb"="Command Prompt Administrator(&amp;X)""Icon"="cmd.exe""HasLUAShield"=""[HKEY_CLASSES_ROOT\Drive\shell\runas\command]@="cmd.exe /s /k pushd \"%V\""[HKEY_CLASSES_ROOT\LibraryFolder\background\shell\runas]"MUIVerb"="Command Prompt Administrator(&amp;X)""Icon"="cmd.exe""HasLUAShield"=""[HKEY_CLASSES_ROOT\LibraryFolder\background\shell\runas\command]@="cmd.exe /s /k pushd \"%V\""]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(14) - 路径/时间/字符切分等DEMO操作]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-14-delims.html</url>
    <content type="text">
      <![CDATA[本篇熟悉操作文件路径、时间，温习字符切分(Delims)。 路径 1234567891011121314151617181920212223@echo off@REM @Author: xianghongai@gmail.com:GTCONTINUE@echo 正在运行的这个批处理：@echo 完全路径[%%0]：%0@echo 去掉引号[%%~0]：%~0@echo 所在分区[%%~d0]：%~d0@echo 所处路径[%%~p0]：%~p0@echo 文件名[%%~n0]：%~n0@echo 扩展名[%%~x0]：%~x0@echo.@echo 文件属性：%~a0@echo 修改时间：%~t0@echo 文件大小：%~z0@echo.@echo 盘符和路径[%%~dp0]：%~dp0@echo 文件名和扩展名[%%~nx0]：%~nx0@echo 当前CMD默认目录[%%cd%%]：%cd%@echo.set "CurrentDirName=%~dp0"for /f "delims=" %%i in ("%CurrentDirName:~0,-1%") do (echo 目录名： %%~ni)pause &gt;nulgoto GTCONTINUE 时间 12345678910@echo off@REM @Author: xianghongai@gmail.comset varTimeTemp1=%time: =0%set varTimeTemp2=%varTimeTemp1::=%set varTime=%varTimeTemp2:~0,6%set varDate=%date:~0,4%%date:~5,2%%date:~8,2%%varTime%@echo 当前日期时间：%varDate%rem %a:~[m[,n]]%@echo %varDate:~0,4%年 %varDate:~4,2%月 %varDate:~6,2%日 %varDate:~8,2%时 %varDate:~10,2%分 %varDate:~12%秒pause 字符切分 123456789101112131415161718192021222324252627282930313233343536373839404142@echo off@REM @Author: xianghongai@gmail.comrem tokens=有时表示提取全部。rem tokens=m表示提取第m列。rem tokens=m,n表示提取第m列和第n列。rem tokens=m-n表示提取第m列至第n列。rem tokens=*表示删除每行前面的空格。忽略行首的所有空格。rem tokens=m*提取第m列以后的所有字符，星号表示剩余的字符。rem tokens=m,*提取第m列以后的所有字符，星号表示剩余的字符。rem delims指明点号、减号、空格为分割符，默认是空格和tab为分割符，delims==及delims=表示不要分割符:GTBeginclsset str="123,456,789,0,abc-def,ghi,jkl-mno,pqr,stu,vwx,yz"for /f "delims=" %%i in (%str%) do echo 字符:%%i@echo.@echo tokens=1 delims=-for /f "tokens=1 delims=-" %%i in (%str%) do echo %%i@echo.@echo tokens=1,6 delims=,-for /f "tokens=1,6 delims=,-" %%i in (%str%) do echo %%i %%j@echo.@echo tokens=2-6 delims=,-for /f "tokens=3-6 delims=,-" %%i in (%str%) do echo %%i %%j %%k@echo.@echo tokens=6* delims=,-for /f "tokens=6* delims=,-" %%i in (%str%) do echo %%i %%j@echo.@echo tokens=6,* delims=,-for /f "tokens=6,* delims=,-" %%i in (%str%) do echo %%i %%j@echo.pause&gt;nulgoto GTBegin]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(13) - 从视频导出高质量GIF图片]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-13-export-high-quality-gif-pictures-from-video.html</url>
    <content type="text">
      <![CDATA[需要ffmpeg，配置ffmpeg到环境变量。 1.从视频片断导出高质量GIF新建文本文件，将下面代码保存，并改文件名和后缀名为 gif.bat 1234567891011@echo offsetlocal enabledelayedexpansionset gif_filename="%2.gif"set start_time=%3set duration=%4set palette="palette.png"set filters="fps=%5,scale=%6:-1:flags=lanczos"ffmpeg -v warning -ss %start_time% -t %duration% -i %1 -vf "%filters%,palettegen=max_colors=%7:stats_mode=diff" -y %palette%ffmpeg -v warning -ss %start_time% -t %duration% -i %1 -i %palette% -lavfi "%filters% [x]; [x][1:v] paletteuse=dither=floyd_steinberg" -y %gif_filename% 将 gif.bat 放在视频所在文件夹， 在视频文件夹图标上，按住 Shift， 点击鼠标右键选择：在此处打开命令窗口 运行命令： gif.bat input.mp4 output 00:00:25 00:00:35 10 640 256 对应解释： gif.bat 导入视频源 导出Gif图片名 开始时间 结束/持续时间 帧率 宽度 色彩数(4-256) 2.整个视频导出高质量GIF同样准备文件 gif-all.bat 123456789@echo offsetlocal enabledelayedexpansionset gif_filename="%2.gif"set palette="palette.png"set filters="fps=%3,scale=%4:-1:flags=lanczos"ffmpeg -v warning -i %1 -vf "%filters%,palettegen=max_colors=%5:stats_mode=diff" -y %palette%ffmpeg -v warning -i %1 -i %palette% -lavfi "%filters% [x]; [x][1:v] paletteuse=dither=floyd_steinberg" -y %gif_filename% 调用：gif-all.bat input.mp4 output 10 640 256 FPS 5 (max 60 seconds) 7 (max 40 seconds) 10 (max 30 seconds) 20 (max 15 seconds) 25 (max 10 seconds) 如果要导多个gif图片，可以先记录好视频中各出入点，一行行编写到另一个批处理文件，然后再 start。]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
      <tag>ffmpeg</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(12) - 合并文本]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-12-merge-text-files.html</url>
    <content type="text">
      <![CDATA[本篇讲合并文本内容，如交叉合并、去除重复内容行和空行、行首行尾加特定字符、加指定分割线等操作。 交叉合并两个文本文件的内容： 1234567891011121314151617181920212223242526272829303132333435363738@Echo Offtitle 交叉合并文本内容 by：小可(xianghongai@gmail.com):GTBegin@echo 默认合并目录下 a.txt 和 b.txt 两个文本文件到 c.txt，确定继续？(y/n)set /p GTConfirm=if "%GTConfirm%"=="y" goto GTYESif "%GTConfirm%"=="Y" goto GTYESif "%GTConfirm%"=="n" goto GTNOif "%GTConfirm%"=="N" goto GTNOecho 请输入正确的指令pause &gt;nulgoto GTBegin:GTYESpushd %cd%for /f "delims=" %%a in ('dir /a-d /b *.txt') do (findstr /r /c:"[^ ]" "%%a"&gt;#move # "%%a")popdFor /F "tokens=1* delims=:" %%i In ('Findstr /n .* b.txt') Do Set "_%%i=%%j"(For /F "delims=" %%i In ('Findstr /n .* a.txt') Do ( Set "Str=%%i"&amp; Set /A Count+=1 SetLocal EnableDelayedExpansion For %%j In (!Count!) Do ( Echo,!Str:*:=! Echo,!_%%j! ) EndLocal))&gt;c.txtStart c.txtecho. :) 搞定pause &gt;nulexit:GTNOexit 合并所有文本内容，并去除重复内容行和空行： 123456789101112131415161718192021222324252627@echo offtitle 合并文本删除重复行 by：小可(xianghongai@gmail.com):GTBegin@echo 默认合并目录下所有文本文件到 all.txt，确定继续？(y/n)set /p GTConfirm=if "%GTConfirm%"=="y" goto GTYESif "%GTConfirm%"=="Y" goto GTYESif "%GTConfirm%"=="n" goto GTNOif "%GTConfirm%"=="N" goto GTNOecho 请输入正确的指令pause &gt;nulgoto GTBegin:GTYESfor /f "delims=" %%a in ('dir /a-d /b /on *.txt') do ( for /f "delims=" %%b in ('type "%%a"') do ( if not defined %%b set %%b=Def &amp; &gt;&gt;$ echo,%%b ))move $ "all.txt"echo. :) 搞定pause &gt;nulexit:GTNOexit 行首行尾加特定字符，预置好字符，拖入要处理的文本到该批处理文件图标上，这里加&lt;p&gt;&lt;/p&gt;： 12345678@echo off@REM @Author: xianghongai@gmail.com@REM @Date: 2016-04-06 11:22:44title 文本行首尾加字符 by：小可(xianghongai@gmail.com):GTCONTINUEclsfor /f "delims=" %%a in ('type "%~1"') do echo ^&lt;p^&gt;%%~a^&lt;/p^&gt;&gt;&gt;"%~dp1%~n1-temp%~x1"goto GTCONTINUE 将大批量图片放置在服务器，要组成图片HTML代码标签，拖入要处理的文本到该批处理文件图标上： 1234567891011@echo off@REM @Author: xianghongai@gmail.comtitle 文本内容行首尾加字符 by：小可(xianghongai@gmail.com)SETLOCAL ENABLEDELAYEDEXPANSIONfor /f "delims=" %%a in ('type "%~1"') do set FilePath="%~dp1%~n1-done%~x1"if exist "%FilePath%" DEL/q "%FilePath%"cd.&gt;%FilePath%for /f "delims=" %%a in ('type "%~1"') do echo ^&lt;img src=^"%%~a^" /^&gt; &gt;&gt; "%FilePath%"set "FilePath=%FilePath:"=%"start %FilePath%exit 加指定分割线，和将要合并的文本处于同一目录，然后执行。 先设定分割线&gt;&gt;all.temp echo ======================================================================== 以及前后换行&gt;&gt;all.temp echo,，这里的,是空格，基础篇里有说。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748@echo offsetlocal enabledelayedexpansiontitle 合并文本(加指定分割线) by：小可(xianghongai@gmail.com):GTBegin@echo 默认合并目录下所有文本文件到 all.txt，确定继续？(y/n)set /p GTConfirm=set varTimeTemp1=%time: =0%set varTimeTemp2=%varTimeTemp1::=%set varTime=%varTimeTemp2:~0,6%set varDate=%date:~0,4%%date:~5,2%%date:~8,2%%varTime%if "%GTConfirm%"=="y" goto GTYESif "%GTConfirm%"=="Y" goto GTYESif "%GTConfirm%"=="n" goto GTNOif "%GTConfirm%"=="N" goto GTNOecho 请输入正确的指令pause &gt;nulgoto GTBegin:GTYESrem 自然合并所有，/b/od 开关可按指定规则按文件名排序进行合并 for /f %%i in ('dir /b *.txt') do ()&gt;all.temp type nulfor %%i in (*.txt) do ( echo 正在处理文件：%%i &gt;&gt;all.temp type "%%i" &gt;&gt;all.temp echo, &gt;&gt;all.temp echo, &gt;&gt;all.temp echo ======================================================================== &gt;&gt;all.temp echo, &gt;&gt;all.temp echo,)move /y all.temp all-%varDate%.txtecho. :) 搞定pause &gt;nulexit:GTNOexitrem /O 用分类顺序列出文件。rem N 按名称(字母顺序) S 按大小(从小到大)rem E 按扩展名(字母顺序) D 按日期/时间(从先到后)rem G 组目录优先 - 反转顺序的前缀]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(11) - 去除指定字符之前或之后的文件名]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-11-removing-a-text-after-and-before-specific-characters-in-files-names.html</url>
    <content type="text">
      <![CDATA[本篇熟悉&quot;tokens=1-3 delims=.-&quot;结合操作 需要提前调整截取范围，分割字符，过滤文件类型，文件原名、新命名 123456789101112131415@echo offsetlocal enabledelayedexpansiontitle 去除指定字符之前或之后的文件名 by：小可(xianghongai@gmail.com)@echo 需要提前调整截取范围，分割字符，过滤文件，调整文件前后名rem tokens=有时表示提取全部。rem tokens=m表示提取第m列。rem tokens=m,n表示提取第m列和第n列。rem tokens=m-n表示提取第m列至第n列。rem tokens=*表示删除每行前面的空格。忽略行首的所有空格。rem tokens=m*提取第m列以后的所有字符，星号表示剩余的字符。rem tokens=m,*提取第m列以后的所有字符，星号表示剩余的字符。rem delims指明点号、减号、空格为分割符，默认是空格和tab为分割符，delims==及delims=表示不要分割符for /f "tokens=1-3 delims=.-" %%i in ('dir /b /a-d *.png') do (ren "%%i-%%j.%%k" "%%i.%%k")pause &gt;nulexit 作用到子目录1234567891011121314151617181920212223242526@echo offsetlocal enabledelayedexpansiontitle 去除指定字符之前或之后的文件名 by：小可(xianghongai@gmail.com)rem 需要提前调整截取范围，分割字符，过滤文件，文件原名、新命名cd /d %~dp0@echo 将 [abc_abc-中文提示.png] 重命名为 [abc_abc.png]@echo --------------------------------------------------@echo 影响当前目录、子目录带 - 字符的 png 文件！谨慎操作@echo 建议只在单独的新建目录操作！@echo --------------------------------------------------@echo 按Enter键继续，退出直接关闭窗口pause &gt;nulfor /f "usebackq tokens=1-3 delims=.-" %%a in (`dir /b /a-d *.png`) do (ren "%%a-%%b.%%c" "%%a.%%c")@echo ...@echo ================================================== 当前目录处理完毕for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq tokens=1-3 delims=.-" %%a in (`dir /a-d /b "%%i\*.png"`) do ( ren "%%i\%%a-%%b.%%c" "%%a.%%c") )@echo ...@echo ================================================== 所有子目录处理完毕@echo 按Enter键退出pause &gt;nulexit]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(10) - 批量剪辑音频]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-10-multiple-audioclips.html</url>
    <content type="text">
      <![CDATA[需要ffmpeg，配置ffmpeg到环境变量。 应用场景：购买了一个专辑的有声文件，音轨上固定时间有广告之类的插入，去除掉它。 这里展示的是去掉开头部分，提前设置好起始时间，务必备份好原始音频数据。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667@echo off@REM @Author: xianghongai@gmail.comtitle 音频剪辑操作 by：小可(xianghongai@gmail.com)SETLOCAL ENABLEDELAYEDEXPANSION:GTBegincls@echo 音频剪辑操作（提前设置好起始时间，备份好原始音频数据）@echo --------------------------------------------set /p HandleDir=需要处理的目录::GTCONTINUEcls@echo 音频剪辑操作@echo --------------------------------------------@echo 处理的目录：%HandleDir%@echo.@echo -----------------1.相同时间段剪辑-----------------@echo 11 - 剪辑当前目录@echo 12 - 剪辑层级子目录@echo -------------------其它-------------------@echo 8 - 重新选择目录@echo 9 - 退出@echo.set GTOperator=9set /p GTOperator="选择操作数: "@echo.if %GTOperator% equ 11 goto GTDIRPREFIXif %GTOperator% equ 12 goto GTSUBDIRPREFIXif %GTOperator% equ 8 goto GTBeginif %GTOperator% equ 9 goto GTExitecho 请选择正确的操作数pause &gt;nulgoto GTCONTINUErem @echo 不能做文件名称的字符rem @echo \ / : * ? " &lt; &gt; |rem 11.当前目录：目录名-文件名:GTDIRPREFIXcd /d "!HandleDir!"for /f "delims=" %%i in ('dir /a-d /b *.MP3 2^&gt;nul') do ( if not "%~nx0"=="%%i" ( ffmpeg -ss 00:00:47.666 -i "%%nxi" -acodec copy "O%%~nxi" ))echo 搞定pause &gt;nulgoto GTCONTINUErem 12.子目录：子目录名-文件名:GTSUBDIRPREFIXcd /d "!HandleDir!"for /f "usebackq" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /a-d /b "%%i\*.MP3" 2^&gt;nul`) do ( ffmpeg -ss 00:00:47.666 -i "%%i\%%j" -acodec copy "%%i\%%~nxi-O%%~nxj" ) )echo 搞定pause &gt;nulgoto GTCONTINUE:GTExitexit]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
      <tag>ffmpeg</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(9) - 提取所有子目录文件(拷贝/剪切)]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-9-extract-files-from-subfolders-into-the-main-folder.html</url>
    <content type="text">
      <![CDATA[提取当前目录及子目录下所有子文件到当前根目录， 在资源管理器搜索栏*.*也可以实现。 拷贝模式1234567891011121314151617181920212223@Echo OffSETLOCAL ENABLEDELAYEDEXPANSIONtitle 提取所有子目录文件 by：小可(xianghongai@gmail.com):GTBegin@echo 将以 复制 方式提取所有子目录文件，确定继续？(y/n)set /p GTConfirm=if "%GTConfirm%"=="y" goto GTYESif "%GTConfirm%"=="Y" goto GTYESif "%GTConfirm%"=="n" goto GTNOif "%GTConfirm%"=="N" goto GTNOecho 请输入正确的指令pause &gt;nulgoto GTBegin:GTYESfor /f "delims=" %%a in ('dir /b/s/a-d') do copy /-y "%%a" "%~dp0%%~nxa"echo. :) 搞定pause &gt;nulexit:GTNOexit 剪切模式1234567891011121314151617181920212223@Echo OffSETLOCAL ENABLEDELAYEDEXPANSIONtitle 提取所有子目录文件 by：小可(xianghongai@gmail.com):GTBegin@echo 将以 剪切 方式提取所有子目录文件，确定继续？(y/n)set /p GTConfirm=if "%GTConfirm%"=="y" goto GTYESif "%GTConfirm%"=="Y" goto GTYESif "%GTConfirm%"=="n" goto GTNOif "%GTConfirm%"=="N" goto GTNOecho 请输入正确的指令pause &gt;nulgoto GTBegin:GTYESfor /f "delims=" %%a in ('dir /b/s/a-d') do move /-y "%%a" "%~dp0%%~nxa"echo. :) 搞定pause &gt;nulexit:GTNOexit]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(8) - 目录名操作]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-8-directory-rename.html</url>
    <content type="text">
      <![CDATA[批量对目录子目录进行加前缀、加后缀、替换字符、删除字符等操作，还有删除空目录。 利用批处理对目录名进行操作。 保存代码到目录名操作.bat执行，将要改动的目录拖放进来，按提示执行。echo off@REM @Author: xianghongai@gmail.commode con cols=100 lines=38color 02title 文件夹操作 by：小可(xianghongai@gmail.com)SETLOCAL ENABLEDELAYEDEXPANSION:GTBegincls@echo 文件夹操作 [前后缀、序数、替换、删除、创建]@echo --------------------------------------------@echo 所有操作按回车键 (Enter) 继续@echo --------------------------------------------set /p HandleDir=拖一个需处理的文件夹进来::GTCONTINUEcls@echo 文件夹操作@echo --------------------------------------------@echo 当前目录：%HandleDir%@echo.@echo -----------------1.加前缀-----------------@echo 11 - 仅第一层子目录：父目录名-本身目录名@echo 12 - 第一层下所有层级的目录名：上一层目录名-本身目录名@echo 13 - 仅第一层子目录：前缀字符-本身目录名@echo 14 - 第一层下所有层级的目录名：前缀字符-本身目录名@echo -----------------2.加后缀-----------------@echo 21 - 仅第一层子目录：本身目录名-后缀字符@echo 22 - 第一层下所有层级的目录名：本身目录名-后缀字符@echo -----------------3.替换删除-----------------@echo 31 - 仅替换第一层子目录名@echo 32 - 替换第一层级下所有层级的目录名@echo 33 - 仅删除第一层子目录名@echo 34 - 删除第一层级下所有层级的目录名@echo -----------------4.创建目录-----------------@echo 41 - 创建目录（仅当前目录）@echo 42 - 创建目录（第一层子目录）@echo -----------------5.创建文件-----------------@echo 51 - 创建文件（仅当前目录）@echo 52 - 创建文件（仅第一层子目录）@echo 53 - 创建文件（所有子目录）@echo -------------------其它-------------------@echo 8 - 重新选择目录@echo 9 - 退出@echo.set GTOperator=9set /p GTOperator="选择操作数："@echo.if %GTOperator% equ 11 goto GTDIRPREFIXif %GTOperator% equ 12 goto GTSUBDIRPREFIXif %GTOperator% equ 13 goto GTDIRPREFIXCUSTOMif %GTOperator% equ 14 goto GTSUBDIRPREFIXCUSTOMif %GTOperator% equ 21 goto GTDIRSUFFIXif %GTOperator% equ 22 goto GTSUBDIRSUFFIXif %GTOperator% equ 23 goto GTDIRSUFFIXCUSTOMif %GTOperator% equ 24 goto GTSUBDIRSUFFIXCUSTOMif %GTOperator% equ 31 goto GTDIRREPLACEif %GTOperator% equ 32 goto GTSUBDIRREPLACEif %GTOperator% equ 33 goto GTDIRDELif %GTOperator% equ 34 goto GTSUBDIRDELif %GTOperator% equ 41 goto GTMKDIRif %GTOperator% equ 42 goto GTSUBDIRMKDIRif %GTOperator% equ 51 goto GTMKFILEif %GTOperator% equ 52 goto GTSUBDIRMKFILEif %GTOperator% equ 53 goto GTAllSUBDIRMKFILEif %GTOperator% equ 8 goto GTBeginif %GTOperator% equ 9 goto GTExitecho 请选择正确的操作数pause &gt;nulgoto GTCONTINUErem @echo 不能做文件名称的字符rem @echo \ / : * ? " &lt; &gt; |rem 11.仅第一层子目录：父目录名-本身目录名:GTDIRPREFIXcd /d "!HandleDir!"for /f "delims=" %%i in ("%cd%") do set "DirNamePrefix=%%~nxi"for /f "delims=" %%i in ('dir /ad /b 2^&gt;nul') do ( if not "%~nx0"=="%%i" ( ren "%%i" "%DirNamePrefix%-%%~ni" ))echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 12.第一层下所有层级的目录名：上一层目录名-本身目录名:GTSUBDIRPREFIXcd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /ad /b "%%i\" 2^&gt;nul`) do ( ren "%%i\%%j" "%%~nxi-%%~nj" ) )echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 13.仅第一层子目录：前缀字符-本身目录名:GTDIRPREFIXCUSTOMset FilePrefix=""set /p FilePrefix="前缀字符:"cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad/b`) do (if not "%%i"==%0 ren "%%i" "%FilePrefix%%%~ni")set FilePrefix=""echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 14.第一层下所有层级的目录名：前缀字符-本身目录名:GTSUBDIRPREFIXCUSTOMset SubFilePrefix=""set /p SubFilePrefix="前缀字符:"cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /ad /b "%%i\" 2^&gt;nul`) do ( ren "%%i\%%j" "!SubFilePrefix!%%~nj"))set SubFilePrefix=""echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 21.仅第一层子目录：本身目录名-后缀字符:GTDIRSUFFIXset FileSuffix=""set /p FileSuffix="后缀字符:"cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad/b`) do (if not "%%i"==%0 ren "%%i" "%%~ni%FileSuffix%")set FileSuffix=""echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 22.第一层下所有层级的目录名：本身目录名-后缀字符:GTSUBDIRSUFFIXset SubFileSuffix=""set /p SubFileSuffix="后缀字符:"cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /ad /b "%%i\" 2^&gt;nul`) do ( ren "%%i\%%j" "%%~nj!SubFileSuffix!"))set SubFileSuffix=""echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 31.仅替换第一层子目录名:GTDIRREPLACEcd /d "!HandleDir!"set /p oldStr=原字符:set /p newStr=替换成:for /f "usebackq tokens=*" %%a in (`dir /ad /b`) do ( set "newFileName=%%~nxa" set "newFileName=!newFileName:%oldStr%=%newStr%!" ren "%%a" "!newFileName!")set oldStr=""set newStr=""echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 32.替换第一层级下所有层级的目录名:GTSUBDIRREPLACEcd /d "!HandleDir!"set /p oldStr=原字符:set /p newStr=替换成:for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /ad /b "%%i\" 2^&gt;nul`) do ( set "newFileName=%%~nxj" set "newFileName=!newFileName:%oldStr%=%newStr%!" ren "%%i\%%j" "!newFileName!"))set oldStr=""set newStr=""set newFileName=""echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 33.仅删除第一层子目录名:GTDIRDELcd /d "!HandleDir!"set /p DelStr=删除字符:for /f "usebackq tokens=*" %%a in (`dir /ad /b`) do ( set "str=%%a" set "str=!str:%DelStr%=!" ren "%%a" "!str!")set DelStr=""set str=""echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 34.删除第一层级下所有层级的目录名:GTSUBDIRDELcd /d "!HandleDir!"set /p DelStr=删除字符:for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /ad /b "%%i\" 2^&gt;nul`) do ( set "str=%%~nxj" set "str=!str:%DelStr%=!" ren "%%i\%%j" "!str!"))set DelStr=""set str=""echo.echo :) 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 41.创建目录（仅当前目录）:GTMKDIRset /p CDirName=目录名:if "%CDirName%"=="" goto :GTMKDIRcd /d "!HandleDir!"md %CDirName%echo.echo :) 搞定(回车继续其它操作)！pause &gt;nulgoto GTCONTINUErem 42.创建目录（第一层子目录）:GTSUBDIRMKDIRset /p SubCDirName=目录名:if "%SubCDirName%"=="" goto :GTSUBDIRMKDIRcd /d "!HandleDir!"for /f "delims=" %%i in ('dir /b /ad') do (cd "%%i"md %SubCDirName%cd "%%~dpi")echo.echo :) 搞定(回车继续其它操作)！pause &gt;nulgoto GTCONTINUErem 51.创建文件（仅当前目录）:GTMKFILEset /p CFileName=文件名:if "%CFileName%"=="" goto :GTMKFILEset CFiledNameExpande="%CFileName%".txtcd /d "!HandleDir!"cd.&gt;"%CFiledNameExpande%"echo.echo :) 搞定(回车继续其它操作)！pause &gt;nulgoto GTCONTINUErem 52.创建文件（第一层子目录）:GTSUBDIRMKFILEset /p SubCFileName=文件名:if "%SubCFileName%"=="" goto :GTSUBDIRMKFILEset CFiledNameExpande="%SubCFileName%".txtcd /d "!HandleDir!"for /f "tokens=*" %%i in ('dir /b /ad') do cd.&gt;"%%i\%CFiledNameExpande%"echo.echo :) 搞定(回车继续其它操作)！pause &gt;nulgoto GTCONTINUErem 53.创建文件（所有子目录）:GTAllSUBDIRMKFILEset /p AllSubCFilesName=文件名:if "%AllSubCFilesName%"=="" goto :GTAllSUBDIRMKFILEset CFiledNameExpande="%AllSubCFilesName%".txtcd /d "!HandleDir!"for /f "tokens=*" %%i in ('dir /b /ad /s') do cd.&gt;"%%i\%CFiledNameExpande%"echo.echo :) 搞定(回车继续其它操作)！pause &gt;nulgoto GTCONTINUE:GTExitexit 删除所有空目录 123456789101112131415161718@echo off@REM @Author: xianghongai@gmail.comtitle 删除所有空目录 by：小可(xianghongai@gmail.com)@echo 删除所有空目录（含子目录）@echo -----------------------------@ set /p GTConfirm="继续操作吗？（y/n） "if /i "%GTConfirm:~0,1%"=="y" ( goto GTYES) else ( goto GTNO ):GTYESfor /f "delims=" %%i in ('dir /ad /b /s^|sort /r') do rd /q "%%i" 2&gt;nul@echo :) 操作完成！pause:GTNOexit 或 1234567891011121314151617181920212223242526@Echo Off@REM @Author: xianghongai@gmail.comtitle 删除所有空目录 by：小可(xianghongai@gmail.com)SETLOCAL ENABLEDELAYEDEXPANSION@echo 删除所有空目录（含子目录）@echo -----------------------------@ set /p GTConfirm="继续操作吗？（y/n） "if /i "%GTConfirm:~0,1%"=="y" ( goto GTYES) else ( goto GTNO ):GTYESfor /f "delims=" %%i in ('dir /ad /b /s') do call :RdEmptyDir "%%i"goto :eof:RdEmptyDirrd %1 2&gt;nul||goto :eofset DirPath=%1for /f "delims=" %%i in (%DirPath%) do ( set DirPath="%%~dpi" for /f "delims=" %%j in ('dir /ad /b "%%~dpi"')do rd "%%~dpi%%j" 2&gt;nul||goto :eof)if "%DirPath:~-2,1%"=="\" set DirPath="%DirPath:~1,-2%"if /i not "%cd%"==%DirPath% call :RdEmptyDir %DirPath%goto :eof:GTNOexit]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(7) - 文件名操作]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-7-file-rename.html</url>
    <content type="text">
      <![CDATA[每次看到小伙伴Bulk Rename Utility玩不转，手动对大量目录子目录下的文件进行加前缀、加后缀、替换、删除等改名操作，就非常心疼。 利用批处理对文件名进行操作。 操作文件前应当对原文件有备份，因为Windows系统对文件名排序这块是02在1之后。 保存代码到文件名操作.bat执行，将要改动的文件所在目录拖放进来，按提示执行。echo off@REM @Author: xianghongai@gmail.com@REM @Date: 2012-02-06mode con cols=100 lines=38color 02title 文件名操作 by：小可(xianghongai@gmail.com)SETLOCAL ENABLEDELAYEDEXPANSION:GTBegincls@echo 文件名操作 [前后缀、序数、替换、删除]@echo --------------------------------------------@echo 所有操作按回车键 (Enter) 继续@echo --------------------------------------------set /p HandleDir=拖一个需处理的文件夹进来::GTCONTINUEcls@echo 文件名操作@echo --------------------------------------------@echo 处理的目录：%HandleDir%@echo.@echo -----------------1.加前缀-----------------@echo 11 - 当前目录：目录名-文件名@echo 12 - 层级子目录：子目录名-文件名@echo 13 - 当前目录：前缀字符-文件名@echo 14 - 层级子目录：前缀字符-文件名@echo -----------------2.加后缀-----------------@echo 21 - 当前目录：文件名-目录名@echo 22 - 层级子目录：文件名-子目录名@echo 23 - 当前目录：文件名-后缀字符@echo 24 - 层级子目录：文件名-后缀字符@echo -----------------3.加序数-----------------@echo 31 - 当前目录：序数@echo 32 - 层级子目录：序数@echo 33 - 当前目录：文件名-序数@echo 34 - 层级子目录：文件名-序数@echo 35 - 当前目录：目录名-序数@echo 36 - 层级子目录：子目录名-序数@echo 37 - 当前目录：字符-序数@echo -------------31.加序数(零占位)-------------@echo 311 - 当前目录：目录名-两位序数@echo 312 - 层级子目录：子目录名-两位序数@echo 313 - 当前目录：字符-两位序数@echo 314 - 当前目录：目录名-三位序数@echo 315 - 层级子目录：子目录名-三位序数@echo 316 - 当前目录：字符-三位序数@echo ----------------4.替换删除----------------@echo 41 - 替换当前目录下文件名@echo 42 - 替换所有子层级中的文件名@echo 43 - 删除当前目录下文件名@echo 44 - 删除所有子层级中的文件名@echo -------------------其它-------------------@echo 8 - 重新选择目录@echo 9 - 退出@echo.set GTOperator=9set /p GTOperator="选择操作数后: "@echo.if %GTOperator% equ 11 goto GTDIRPREFIXif %GTOperator% equ 12 goto GTSUBDIRPREFIXif %GTOperator% equ 13 goto GTDIRPREFIXCUSTOMif %GTOperator% equ 14 goto GTSUBDIRPREFIXCUSTOMif %GTOperator% equ 21 goto GTDIRSUFFIXif %GTOperator% equ 22 goto GTSUBDIRSUFFIXif %GTOperator% equ 23 goto GTDIRSUFFIXCUSTOMif %GTOperator% equ 24 goto GTSUBDIRSUFFIXCUSTOMif %GTOperator% equ 31 goto GTDIRORDINALif %GTOperator% equ 32 goto GTSUBDIRORDINALif %GTOperator% equ 33 goto GTDIRFLIENAMEORDINALif %GTOperator% equ 34 goto GTSUBDIRFILENAMEORDINALif %GTOperator% equ 35 goto GTDIRNAMEORDINALif %GTOperator% equ 36 goto GTSUBDIRNAMEORDINALif %GTOperator% equ 37 goto GTDIRCUSTOMNAMEORDINALif %GTOperator% equ 311 goto GTDIRNAMEORDINALOOif %GTOperator% equ 312 goto GTSUBDIRNAMEORDINALOOif %GTOperator% equ 313 goto GTDIRCUSTOMNAMEORDINALOOif %GTOperator% equ 314 goto GTDIRNAMEORDINALOOOif %GTOperator% equ 315 goto GTSUBDIRNAMEORDINALOOOif %GTOperator% equ 316 goto GTDIRCUSTOMNAMEORDINALOOOif %GTOperator% equ 41 goto GTDIRREPLACEif %GTOperator% equ 42 goto GTSUBDIRREPLACEif %GTOperator% equ 43 goto GTDIRDELif %GTOperator% equ 44 goto GTSUBDIRDELif %GTOperator% equ 8 goto GTBeginif %GTOperator% equ 9 goto GTExitecho 请选择正确的操作数pause &gt;nulgoto GTCONTINUErem @echo 不能做文件名称的字符rem @echo \ / : * ? " &lt; &gt; |rem 11.当前目录：目录名-文件名:GTDIRPREFIXcd /d "!HandleDir!"for /f "delims=" %%i in ("%cd%") do set "DirNamePrefix=%%~nxi"for /f "delims=" %%i in ('dir /a-d /b *.* 2^&gt;nul') do ( if not "%~nx0"=="%%i" ( ren "%%i" "%DirNamePrefix%-%%~nxi" ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 12.子目录：子目录名-文件名:GTSUBDIRPREFIXcd /d "!HandleDir!"rem for /r %%a in (*.*) do (for %%b in ("%%a\..") do (ren "%%a" "%%~nxb-%%~nxa"))for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /a-d /b "%%i\*.*" 2^&gt;nul`) do ( ren "%%i\%%j" "%%~nxi-%%~nxj" ) )echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 13.当前目录：前缀字符-文件名:GTDIRPREFIXCUSTOMset FilePrefix=""set /p FilePrefix="前缀字符:"cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /a-d/b`) do (if not "%%i"==%0 ren "%%i" "%FilePrefix%%%~nxi")echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 14.子目录：前缀字符-文件名:GTSUBDIRPREFIXCUSTOMset SubFilePrefix=""set /p SubFilePrefix="前缀字符:"cd /d "!HandleDir!"rem for /f "usebackq delims=" %%i in (`dir /a-d/b/s`) do (if not "%%i"==%0 ren "%%i" "%SubFilePrefix%%%~nxi")for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /a-d /b "%%i\*.*" 2^&gt;nul`) do ( ren "%%i\%%j" "!SubFilePrefix!%%~nxj"))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 21.当前目录：文件名-目录名:GTDIRSUFFIXcd /d "!HandleDir!"for /f "delims=" %%i in ("%cd%") do set "DirNameSuffix=%%~nxi"for /f "delims=" %%i in ('dir /a-d /b *.* 2^&gt;nul') do ( if not "%~nx0"=="%%i" ( ren "%%i" "%%~ni-%DirNameSuffix%%%~xi" ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 22.子目录：文件名-子目录名:GTSUBDIRSUFFIXcd /d "!HandleDir!"rem for /r %%a in (*.*) do (for %%b in ("%%a\..") do (ren "%%a" "%%~na-%%~nxb%%~xa"))for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /a-d /b "%%i\*.*" 2^&gt;nul`) do ( ren "%%i\%%j" "%%~nj-%%~nxi%%~xj" ) )echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 23.当前目录：文件名-后缀字符:GTDIRSUFFIXCUSTOMset FileSuffix=""set /p FileSuffix="后缀字符:"cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /a-d/b`) do (if not "%%i"==%0 ren "%%i" "%%~ni!FileSuffix!%%~xi")echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 24.子目录：文件名-后缀字符:GTSUBDIRSUFFIXCUSTOMset SubFileSuffix=""set /p SubFileSuffix="后缀字符:"cd /d "!HandleDir!"rem for /f "usebackq delims=" %%i in (`dir /a-d/b/s`) do (if not "%%i"==%0 ren "%%i" "%%~ni%SubFileSuffix%%%~xi")for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /a-d /b "%%i\*.*" 2^&gt;nul`) do ( ren "%%i\%%j" "%%~nj!SubFileSuffix!%%~xj"))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 31.当前目录：序数:GTDIRORDINALset NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTDIRORDINALORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTDIRORDINALORDERBY)cd /d "!HandleDir!"set /a num=0for /f "usebackq tokens=*" %%i in (`dir /a-d /b /o!OrderBy! /tc`) do ( if not "%%i"=="%~n0%~x0" ( set /a num+=1 ren "%%i" "!num!%%~xi" ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 32.子目录：序数:GTSUBDIRORDINALset NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTSUBDIRORDINALORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTSUBDIRORDINALORDERBY)cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( set /a num=0 for /f "usebackq delims=" %%j in (`dir /a-d /b /o!OrderBy! "%%i\*.*" 2^&gt;nul`) do ( set /a num+=1 ren "%%i\%%j" "!num!%%~xj" ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 33.当前目录：文件名-序数:GTDIRFLIENAMEORDINALset NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTDIRFLIENAMEORDINALORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTDIRFLIENAMEORDINALORDERBY)cd /d "!HandleDir!"set /a num=0for /f "usebackq delims=" %%i in (`dir /a-d /b /o!OrderBy! *.* 2^&gt;nul`) do ( if not "%~nx0"=="%%i" ( set /a num+=1 ren "%%i" "%%~ni-!num!%%~xi"))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 34.子目录：文件名-序数:GTSUBDIRFILENAMEORDINALset NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTSUBDIRFILENAMEORDINALORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTSUBDIRFILENAMEORDINALORDERBY)cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( set /a num=0 for /f "usebackq delims=" %%j in (`dir /a-d /b /o!OrderBy! "%%i\*.*" 2^&gt;nul`) do ( set /a num+=1 ren "%%i\%%j" "%%~nj-!num!%%~xj" ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 35.当前目录：目录名-序数:GTDIRNAMEORDINALset NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTDIRNAMEORDINALORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTDIRNAMEORDINALORDERBY)cd /d "!HandleDir!"set /a num=0for /f "usebackq delims=" %%i in ('%cd%') do set "DirNamePrefix=%%~nxi"for /f "usebackq delims=" %%i in (`dir /a-d /b /o!OrderBy! *.* 2^&gt;nul`) do ( if not "%~nx0"=="%%i" ( set /a num+=1 ren "%%i" "%DirNamePrefix%-!num!%%~xi"))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 36.子目录：子目录名-序数:GTSUBDIRNAMEORDINALcd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( set /a num=0 for /f "usebackq delims=" %%j in (`dir /a-d /b /o!OrderBy! "%%i\*.*" 2^&gt;nul`) do ( set /a num+=1 ren "%%i\%%j" "%%~nxi-!num!%%~xj" ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 37.自定义字符和开始序数:GTDIRCUSTOMNAMEORDINALset SubFilePrefix=""set StartNum=0set /p SubFilePrefix="前缀字符:"set /p StartNum="开始序数:"set NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTORDERBY)cd /d "!HandleDir!"for /f "usebackq tokens=*" %%i in (`dir /a-d /b /o!OrderBy!`) do ( if not "%%i"=="%~n0%~x0" ( set /a StartNum+=1 ren "%%i" "!SubFilePrefix!!StartNum!%%~xi" ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 311.当前目录：目录名-两位序数:GTDIRNAMEORDINALOOset NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTDIRNAMEORDINALOOORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTDIRNAMEORDINALOOORDERBY)cd /d "!HandleDir!"set /a num=0for /f "usebackq delims=" %%i in ('%cd%') do set "DirNamePrefix=%%~nxi"for /f "usebackq delims=" %%i in (`dir /a-d /b /o!OrderBy! *.* 2^&gt;nul`) do ( if not "%~nx0"=="%%i" ( set /a num+=1 if !num! LSS 10 ( ren "%%i" "%DirNamePrefix%-0!num!%%~xi" ) else ( ren "%%i" "%DirNamePrefix%-!num!%%~xi" ) ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 312.子目录：子目录名-两位序数:GTSUBDIRNAMEORDINALOOset NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTSUBDIRNAMEORDINALOOORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTSUBDIRNAMEORDINALOOORDERBY)cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( set /a num=0 for /f "usebackq delims=" %%j in (`dir /a-d /b /o!OrderBy! "%%i\*.*" 2^&gt;nul`) do ( set /a num+=1 if !num! LSS 10 ( ren "%%i\%%j" "%%~ni-0!num!%%~xj" ) else ( ren "%%i\%%j" "%%~ni-!num!%%~xj" ) ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 313.当前目录：自定义字符和开始序数(两位):GTDIRCUSTOMNAMEORDINALOOset SubFilePrefix=""set StartNum=0set /p SubFilePrefix="前缀字符:"set /p StartNum="开始序数:"set /a StartNum-=1set NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTDIRCUSTOMNAMEORDINALOOORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTDIRCUSTOMNAMEORDINALOOORDERBY)cd /d "!HandleDir!"for /f "usebackq tokens=*" %%i in (`dir /a-d /b /o!OrderBy!`) do ( if not "%%i"=="%~n0%~x0" ( set /a StartNum+=1 if !StartNum! LSS 10 ( ren "%%i" "!SubFilePrefix!0!StartNum!%%~xi" ) else ( ren "%%i" "!SubFilePrefix!!StartNum!%%~xi" ) ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 314.当前目录：目录名-三位序数:GTDIRNAMEORDINALOOOset NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTDIRNAMEORDINALOOOORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTDIRNAMEORDINALOOOORDERBY)cd /d "!HandleDir!"set /a num=0for /f "usebackq delims=" %%i in ('%cd%') do set "DirNamePrefix=%%~nxi"for /f "usebackq delims=" %%i in (`dir /a-d /b /o!OrderBy! *.* 2^&gt;nul`) do ( if not "%~nx0"=="%%i" ( set /a num+=1 if !num! LSS 10 ( ren "%%i" "%DirNamePrefix%-00!num!%%~xi" ) else ( if !num! LSS 100 ( ren "%%i" "%DirNamePrefix%-0!num!%%~xi" ) else ( ren "%%i" "%DirNamePrefix%-!num!%%~xi" ) ) ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 315.子目录：子目录名-三位序数:GTSUBDIRNAMEORDINALOOOset NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTSUBDIRNAMEORDINALOOOORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTSUBDIRNAMEORDINALOOOORDERBY)cd /d "!HandleDir!"for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( set /a num=0 for /f "usebackq delims=" %%j in (`dir /a-d /b /o!OrderBy! "%%i\*.*" 2^&gt;nul`) do ( set /a num+=1 if !num! LSS 10 ( ren "%%i\%%j" "%%~nxi-00!num!%%~xj" ) else ( if !num! LSS 100 ( ren "%%i\%%j" "%%~nxi-0!num!%%~xj" ) else ( ren "%%i\%%j" "%%~nxi-!num!%%~xj" ) ) ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 316.自定义字符和开始序数(三位):GTDIRCUSTOMNAMEORDINALOOOset SubFilePrefix=""set StartNum=0set /p SubFilePrefix="前缀字符:"set /p StartNum="开始序数:"set /a StartNum-=1set NOrderBy=1@echo.@echo 文件排序方式@echo --------------------------------------------@echo 1.文件大小@echo 2.文件小大@echo 3.创建时间早晚@echo 4.创建时间晚早@echo 5.文件名A-Z@echo 6.文件名Z-A@echo 7.扩展名A-Z@echo 8.扩展名Z-A@echo --------------------------------------------:GTDIRCUSTOMNAMEORDINALOOOORDERBYset /p NOrderBy="文件排序方式:"set OrderBy=dif %NOrderBy% equ 1 (set OrderBy=-s)if %NOrderBy% equ 2 (set OrderBy=s)if %NOrderBy% equ 3 (set OrderBy=d)if %NOrderBy% equ 4 (set OrderBy=-d)if %NOrderBy% equ 5 (set OrderBy=n)if %NOrderBy% equ 6 (set OrderBy=-n)if %NOrderBy% equ 7 (set OrderBy=-e)if %NOrderBy% equ 8 (set OrderBy=e)echo %NOrderBy%|findstr /be "[1-8]" &gt;nul || (echo 选择支持的排序方式 &amp; goto GTDIRCUSTOMNAMEORDINALOOOORDERBY)cd /d "!HandleDir!"for /f "usebackq tokens=*" %%i in (`dir /a-d /b /o!OrderBy!`) do ( if not "%%i"=="%~n0%~x0" ( set /a StartNum+=1 if !StartNum! LSS 10 ( ren "%%i" "!SubFilePrefix!00!StartNum!%%~xi" ) else ( if !StartNum! LSS 100 ( ren "%%i" "!SubFilePrefix!0!StartNum!%%~xi" ) else ( ren "%%i" "!SubFilePrefix!!StartNum!%%~xi" ) ) ))echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 替换当前目录下文件名:GTDIRREPLACEcd /d "!HandleDir!"set /p oldStr=原字符:set /p newStr=替换成:for /f "usebackq tokens=*" %%a in (`dir /a-d /b`) do ( set "newFileName=%%~na" set "newFileName=!newFileName:%oldStr%=%newStr%!" ren "%%a" "!newFileName!%%~xa")echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 替换所有子层级中的文件名:GTSUBDIRREPLACEcd /d "!HandleDir!"set /p oldStr=原字符:set /p newStr=替换成:for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /a-d /b "%%i\" 2^&gt;nul`) do ( set "newFileName=%%~nj" set "newFileName=!newFileName:%oldStr%=%newStr%!" ren "%%i\%%j" "!newFileName!%%~xj"))set oldStr=""set newStr=""set newFileName=""echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 删除当前目录下文件名:GTDIRDELcd /d "!HandleDir!"set /p DelStr=删除字符:for /f "usebackq tokens=*" %%a in (`dir /a-d /b`) do ( set "str=%%~na" set "str=!str:%DelStr%=!" ren "%%a" "!str!%%~xa")echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUErem 删除所有子层级中的文件名:GTSUBDIRDELcd /d "!HandleDir!"set /p DelStr=删除字符:for /f "usebackq delims=" %%i in (`dir /ad /b /s^|sort /r`) do ( for /f "usebackq delims=" %%j in (`dir /a-d /b "%%i\" 2^&gt;nul`) do ( set "str=%%~nj" set "str=!str:%DelStr%=!" ren "%%i\%%j" "!str!%%~xj"))set DelStr=""set str=""echo.echo ：） 搞定(回车继续其它操作)pause &gt;nulgoto GTCONTINUE:GTExitexit]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(6) - 多轮修改文件名]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-6-multiple-times-rename-files.html</url>
    <content type="text">
      <![CDATA[多轮批量修改目录下文件名，更改文件名大写为小写。 保存代码到替换文件名[便捷拖入].bat，将要改动的目录拖放在本bat文件图标上，按提示执行。 1234567891011121314151617181920@echo off@REM @Author: xianghongai@gmail.comtitle 批量替换文件名 by：小可(xianghongai@gmail.com):GTCONTINUEset /a count=%count%+1set /p oldStr=原字符:set /p newStr=替换成:for /f "tokens=*" %%a in ('dir "%~1" /a /b') do (SETLOCAL ENABLEDELAYEDEXPANSIONset "newFileName=%%~na"set "newFileName=!newFileName:%oldStr%=%newStr%!"ren "%~1\%%~nxa" "!newFileName!%%~xa"ENDLOCAL)echo.echo 完成 %count% 轮set oldStr=""set newStr=""echo.goto :GTCONTINUE 12345678910@echo offtitle 更改文件名大写为小写::本代码原思路由yyykkkyyyy提供，依梦琴瑶修改并添加子目录的文件处理set dir=%~dp0&amp;call:cdtofor /f "delims=" %%i in ('dir/s/b/ad') do set dir=%%i&amp;call:cdtopauseexit/b:cdtocd /d %dir%for /f "delims=" %%i in ('dir/b/a-d/l') do ren "%%i" "%%i"]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(5) - 根据文件名自动创建目录存放文件]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-5-create-folder-using-part-of-filename-and-move-file-into.html</url>
    <content type="text">
      <![CDATA[以前给画家杨彦作助理，要维护杨老师几十年的电子作品数据，若干文件，但是，有一定规则，如有按年份命名，这样，根据&quot;tokens=1,* delims=-&quot;按长度按指定字符切分文件名，自动创建年份的目录，保存对应的所有文件。 1231998-001.jpg ~ 1998-xxx.jpg1999-001.jpg ~ 1999-xxx.jpg... 代码实现，按需设定切分规则。 12345678910111213141516171819202122232425262728293031@echo off@REM @Author: xianghongai@gmail.comtitle 根据文件名自动创建目录存放文件 by：小可(xianghongai@gmail.com)@echo 根据文件名自动创建目录存放文件@echo -------------------------------------:GTBegin@echo 默认处理目录下所有格式文件，确定继续？(y/n)set /p GTConfirm=if "%GTConfirm%"=="y" goto GTYESif "%GTConfirm%"=="Y" goto GTYESif "%GTConfirm%"=="n" goto GTNOif "%GTConfirm%"=="N" goto GTNOecho 请输入正确的指令pause &gt;nulgoto GTBegin:GTYES@echo -------------------------------------set /p FilePath=需要处理的目录:cd /d %FilePath%for /f "tokens=1,* delims=-" %%J in ('dir /b *.*') do ( if not exist "%%J\" md "%%J" move /-y "%%J-%%K" "%%J" )echo. :) 搞定pause &gt;nulexit:GTNOexit]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(4) - 通过文本内容重命名文件]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-4-rename-files-from-text.html</url>
    <content type="text">
      <![CDATA[对一个目录下，不能全部规则的命名文件，先按上文介绍的在Excel拖行数据保存在文本，然后用批处理一次性处理各文件，在处理前给一个对应命名的提示，先审检是否达到既定目的。 准备一个文本文件，里面是一行行即将要命名的文件名；准备一个要命名的目录文件；保存本代码到通过文本内容重命名文件.bat，执行按提示操作。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071@echo off@REM @Author: xianghongai@gmail.comtitle 通过文本内容重命名文件 by：小可(xianghongai@gmail.com)setlocal EnableDelayedExpansion:GTCONTINUEclsecho 通过文本内容重命名文件echo -----------------------------set /p importTxt=拖文本文件按Enter键:set /p filesPath=拖目录路径按Enter键:set i=0for /f "usebackq tokens=1 delims==" %%a in (`more /s %importTxt%`) do ( set /a i+=1 set "author[!i!]=%%a")set j=0for /f "usebackq" %%b in (`dir /b "%filesPath%\*.*"`) do ( set /a j+=1)set k=!i!,!j!set nMax=0for %%a in (%k%) do ( if %%~a gtr !nMax! set nMax=%%~a)rem echo 最大值：!nMax!set nMin=!nMax!for %%a in (%k%) do ( if %%~a lss !nMin! set nMin=%%~a)rem echo 最小值：!nMin!set c=0set FilesExist=0echo.echo 文件即将按以下格式重命名：echo -----------------------------for /f "usebackq delims==" %%b in (`dir /a-d /b /on /tc "%filesPath%"`) do ( set /a c+=1 cd /d %filesPath% if !c! leq !nMin! ( for %%a in (!c!) do ( if not exist !author[%%a]!%%~xb ( echo "%%b" "!author[%%a]!%%~xb" ) else ( set /a FilesExist+=1 echo 已有文件 "!author[%%a]!%%~xb" ) ) ))echo -----------------------------if !FilesExist! gtr 0 ( echo. echo 当前目录有 !FilesExist! 个相同命名的文件， echo 可能会引起文本内容行和对应文件的错位！ echo.)echo 按Enter键确认操作pause &gt;nulset d=0for /f "usebackq delims==" %%b in (`dir /a-d /b /on /tc "%filesPath%"`) do ( set /a d+=1 cd /d %filesPath% if !d! leq !nMin! ( for %%a in (!d!) do ( if not exist "!author[%%a]!%%~xb" ( ren "%%b" "!author[%%a]!%%~xb" ) ) ))echo 搞定pause &gt;nulgoto GTCONTINUEexit]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(3) - 通过文本内容行创建文件夹]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-3-create-folders-from-each-line-of-a-textfile.html</url>
    <content type="text">
      <![CDATA[还是在电商团队，每次处理新商品和上架新商品，商品太多，小伙伴以前是一个一个复制粘贴改名建立目录归档文件，比较麻烦，各商品有一定属性，不能直接批处理建立，于是让小伙伴先Excel按他们命名规则拖一行行数据，然后保存在txt，然后用批处理一次性建立各目录。 要执行，准备一个文本文件，里面是一行行即将要创建为目录的目录名；准备一个空根目录；保存本代码到通过文本内容行创建文件夹.bat，执行按提示拖相关文件和目录进去即可。 123456789101112@echo off@REM @Author: xianghongai@gmail.comtitle 通过文本创建目录 by：小可(xianghongai@gmail.com)echo 通过文本创建目录echo -----------------------------set /p importTxt=拖文本文件按Enter键:set /p outputPath=拖保存路径按Enter键:for /f "usebackq tokens=1 delims==" %%a in (`more /s %importTxt%`) do mkdir "%outputPath%\%%a"explorer.exe "%outputPath%"echo :) 搞定啦!pause &gt;nulexit]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(2) - 获取目录名、文件名或路径]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-2-get-path.html</url>
    <content type="text">
      <![CDATA[以前在电商团队，小伙伴每天要处理很多商品文件，上千个商品找对应文件不方便。早先不知道有Everything这个工具，自己用C#写了快速搜寻和定位文件、目录的小工具，其中路径数据获取，用C#生成批处理文件执行调用实现，然后关键字匹配找目录和文件，还可以作用于局域网。 批处理部分代码如下： 要执行，保存代码到获取目录文件名或路径.bat执行，拖一个目录进去回车，按提示选择对应数字序数操作。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172@echo off@REM @Author: xianghongai@gmail.comtitle 获取目录文件名或路径 by：小可(xianghongai@gmail.com)SETLOCAL ENABLEDELAYEDEXPANSION:GTBegincls@echo 获取目录文件名或路径@echo -----------------------------set HandleDirTemp=:set /p HandleDirTemp=需获取的目录：rem 去除可能存在的双引号set "HandleDirTemp=%HandleDirTemp:"=%"if "%HandleDirTemp%"==":" goto GTBeginif not exist "%HandleDirTemp%" goto GTBeginfor %%i in ("%HandleDirTemp%") do if /i "%%~di"==%%i goto GTBeginset "HandleDir=%HandleDirTemp%"if not "%HandleDirTemp:~-1%"=="\" set "HandleDir=%HandleDirTemp%\"rem set "HandleDir=%HandleDirTemp%\"rem set "HandleDir=%HandleDir:\\=\%"rem set "op=%op:~,-1%"pushd "%HandleDir%"cd /d "%HandleDir%"&gt;nul 2&gt;nul || exitset CurrentDir=%HandleDir%popd:GTCONTINUEcls@echo 获取目录文件名或路径@echo -----------------------------@echo 处理目录：%CurrentDir%@echo.@echo 1 - 退出@echo 2 - 所有目录和文件路径@echo 3 - 所有目录路径@echo 4 - 指定格式的文件路径@echo 5 - 所有目录名和文件名@echo 6 - 所有层级目录名@echo 7 - 所有层级文件名@echo 8 - 当前层级目录名@echo 9 - 当前层级文件名@echo 0 - 重新设置目录@echo.@ set /p GTOperator="选择操作编号，按回车键: "@echo.set varDir= %~dp0set varTimeTemp1=%time: =0%set varTimeTemp2=%varTimeTemp1::=%set varTime=%varTimeTemp2:~0,6%set varDate=%date:~0,4%%date:~5,2%%date:~8,2%%varTime%if /i "%GTOperator%"=="1" goto GTExitif /i "%GTOperator%"=="2" goto GTDIRFILEPATHif /i "%GTOperator%"=="3" goto GTDIRPATHif /i "%GTOperator%"=="4" goto GTFILEPATHCUSTOMFORMATif /i "%GTOperator%"=="5" goto GTDIRFILENAMEif /i "%GTOperator%"=="6" goto GTDIRNAMEif /i "%GTOperator%"=="7" goto GTFILESNAMEif /i "%GTOperator%"=="8" goto GTDIRNAMECURRENTif /i "%GTOperator%"=="9" goto GTFILESNAMECURRENTif /i "%GTOperator%"=="0" goto GTBeginecho 输入正确的操作编号pause &gt;nulgoto GTCONTINUE:GTDIRFILEPATHset ListFileName=所有目录和文件路径set LISTFilePath=%varDir%%ListFileName%-%varDate%.txt@echo 需要一点时间，请耐心等待...for /f "delims=" %%a in ('dir /b /s "%HandleDir%"') do echo %%~a &gt;&gt; %LISTFilePath%if not exist %LISTFilePath% goto GTNODOC:: echo 完成操作start %LISTFilePath%:: pause &gt;nulgoto GTCONTINUE:GTDIRPATHset ListFileName=所有目录set LISTFilePath=%varDir%%ListFileName%-%varDate%.txt@echo 需要一点时间，请耐心等待...for /f "delims=" %%a in ('dir /ad /b /s "%HandleDir%"') do echo %%~a &gt;&gt; %LISTFilePath%if not exist %LISTFilePath% goto GTNODOC:: echo 完成操作start %LISTFilePath%:: pause &gt;nulgoto GTCONTINUE:GTFILEPATHCUSTOMFORMAT@ set /p FileExtension="文件扩展名(*.jpg/*.gif/*.png/*.mp4/*.mp3/*.exe/*.txt …):"set ListFileName=指定格式的文件路径set LISTFilePath=%varDir%%ListFileName%-%varDate%.txt@echo 需要一点时间，请耐心等待...for /f "delims=" %%a in ('dir /b /s "%HandleDir%"%FileExtension%') do echo %%~a &gt;&gt; %LISTFilePath%if not exist %LISTFilePath% goto GTNODOC:: echo 完成操作start %LISTFilePath%:: pause &gt;nulgoto GTCONTINUE:GTDIRFILENAMEset ListFileName=所有目录和文件名set LISTFilePath=%varDir%%ListFileName%-%varDate%.txt@echo 需要一点时间，请耐心等待...for /f "delims=" %%a in ('dir /b /s "%HandleDir%"') do echo %%~nxa &gt;&gt; %LISTFilePath%if not exist %LISTFilePath% goto GTNODOC:: echo 完成操作start %LISTFilePath%:: pause &gt;nulgoto GTCONTINUE:GTDIRNAMEset ListFileName=所有目录名set LISTFilePath=%varDir%%ListFileName%-%varDate%.txt@echo 需要一点时间，请耐心等待...for /f "delims=" %%a in ('dir /ad /b /s "%HandleDir%"') do echo %%~nxa &gt;&gt; %LISTFilePath%if not exist %LISTFilePath% goto GTNODOC:: echo 完成操作start %LISTFilePath%:: pause &gt;nulgoto GTCONTINUE:GTFILESNAMEset ListFileName=所有文件名set LISTFilePath=%varDir%%ListFileName%-%varDate%.txt@echo 需要一点时间，请耐心等待...for /f "delims=" %%a in ('dir /a-d /b /s "%HandleDir%"') do echo %%~nxa &gt;&gt; %LISTFilePath%if not exist %LISTFilePath% goto GTNODOC:: echo 完成操作start %LISTFilePath%:: pause &gt;nulgoto GTCONTINUE:GTDIRNAMECURRENTset ListFileName=当前层级目录名set LISTFilePath=%varDir%%ListFileName%-%varDate%.txt@echo 需要一点时间，请耐心等待...for /f "delims=" %%a in ('dir /ad /b "%HandleDir%"') do echo %%~nxa &gt;&gt; %LISTFilePath%if not exist %LISTFilePath% goto GTNODOC:: echo 完成操作start %LISTFilePath%:: pause &gt;nulgoto GTCONTINUE:GTFILESNAMECURRENTset ListFileName=当前层级文件名set LISTFilePath=%varDir%%ListFileName%-%varDate%.txt@echo 需要一点时间，请耐心等待...for /f "delims=" %%a in ('dir /a-d /b "%HandleDir%"') do echo %%~nxa &gt;&gt; %LISTFilePath%if not exist %LISTFilePath% goto GTNODOC:: echo 完成操作start %LISTFilePath%:: pause &gt;nulgoto GTCONTINUE:GTNODOCecho %CurrentDir% 没有相关目录或文档！pause &gt;nulgoto GTCONTINUE:GTExitexit]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[批处理笔记(1) - 基础]]>
    </title>
    <url>%2Ftech%2Fbatch-in-action-1-preface.html</url>
    <content type="text">
      <![CDATA[本系列笔记是我在Windows平台上，多年工作和生活中积累下来的批处理相关技术点。 UPDATE: 2018-12-18 : 不建议写基于 Windows CMD 的 Batch file，系统切换语言后，字符编码是最大的问题，并且，功能过于基础，组装成应用比较麻烦； 建议安装 Git 客户端，写基于 Bash 的脚本，适用性更强；或者 PowerShell 。 批处理，维基上是这么定义的：“在DOS、OS/2、微软视窗系统中，是一种用来当成脚本语言运作程序的文件。它本身是文本文件，其中包含了一系列让具备命令行界面的解释器读取并运行的指令。它相当于是类Unix系统下的Shell script。文件扩展名为.bat或.cmd，Shell程序逐行运行命令”。 就是在命令行界面(CLI)执行指令，为的就是一个快，省事，偷懒，不依赖其它软件。 Windows 10,8,7，Vista和XP中的命令称为‘CMD命令’或‘命令提示符命令’，而Windows 98/95和MS-DOS中的命令则称为‘DOS命令’。 本篇讲基础，后面的讲实际实用。 基础部分扫一两遍，旨在认识，不在熟悉。 .当前目录 ..上一层目录 \根目录 文件及目录路径：使用反斜杠\，不使用正斜杠/ 文件及目录路径：存在空格，使用双引号包裹路径 不可用于文件目录名的字符：\ / : * ? &quot; &lt; &gt; | 需双引号包裹的字符：( ) [ ] { } ^ = ; ! ‘ + , ` ~ &amp; 空格 转义字符^ 需要转义的字符：^、&lt;、&gt;、|、&amp; %%自己可以转义自己 rem(回显)和::(不回显)注释语句 @隐藏命令的回显 echo不显示命令本身，只显示执行后结果 pause &gt;nul 暂停，隐藏pause显示的信息 常用DOS命令 command /? 查看command命令帮助说明 cd/chdir /d [drive:][path] md/mkdir [drive:][path] rd/rmdir [/s] [/q] [drive:]path 删除子目录树/安静模式 copy /? ren/rename /? move /? del/erase /? attrib /? tree /? dir /? find /? findstr /? sort /? xcopy /? type /? more 逐屏显示输出 set 显示、设置或删除 cmd.exe 环境变量。/p 用户输入，/a 数学运算 建议CMD cd到桌面以help &gt;&gt; cli_help.txt、cd /? &gt;&gt; cd_help.txt这类方式深入查阅相关命令说明。 if/else 语句 if exist判断驱动器、文件或文件夹是否存在 if &quot;字符串1&quot;==&quot;字符串2&quot; 判断某两个字符串是否相等 if defined str 判断某个变量是否已经被赋值 if 数值1 equ 数值2 判断某两个数值是否相等+ `equ`， equal + `gtr`， greater than + `geq`， greater than or equal + `lss`， less than + `leq`， less than or equal + `neq`， no equal for 语句for %variable in(set) do command [command-parameters] 遍历目录（directory）for /D %variable in(set) DO command [command-parameters]如果集中包含通配符，则指定与目录名匹配，而不与文件名匹配。 递归遍历for /R [[drive:]path] %variable IN (set) DO command [command-parameters]检查以 [drive:]path 为根的目录树，指向每个目录中的 FOR 语句。如果在 /R 后没有指定目录规范，则使用当前目录。如果集仅为一个单点(.)字符，则枚举该目录树。 计数循环for /L %variable IN (start,step,end) DO command [command-parameters]该集表示以增量形式从开始到结束的一个数字序列。(1,1,5)将产生序列1 2 3 4 5，(5,-1,1)将产生序列5 4 3 2 1. for /F for /F [&quot;options&quot;] %variable IN (file-set文件名) DO command [command-parameters] for /F [&quot;options&quot;] %variable IN (&quot;string&quot;字符串) DO command [command-parameters] for /F [&quot;options&quot;] %variable IN (&#39;command&#39;命令语句) DO command [command-parameters] 123456789101112131415161718192021222324252627282930- "options"（delims、tokens、skip、eol、userbackq、变量延迟）解析文本，读取字符串，eol=str - 忽略以指定字符打头的行（默认忽略以分号打头的行的功能，因为以分号打头的行在很多语言中都是作为注释语句）skip=n - 跳过无关内容，直奔主题delims=符号列表 - 切分字符串的利器，默认以空格和Tab作分割符tokens=x,y,m-n - 定点提取 %~I - 删除任何引号(")，扩展 %I(形式变量) %~fI - 将 %I 扩展到一个完全合格的路径名 %~dI - 仅将 %I 扩展到一个驱动器号 %~pI - 仅将 %I 扩展到一个路径 %~nI - 仅将 %I 扩展到一个文件名 %~xI - 仅将 %I 扩展到一个文件扩展名 %~sI - 扩展的路径只含有短名 %~aI - 将 %I 扩展到文件的文件属性 %~tI - 将 %I 扩展到文件的日期/时间 %~zI - 将 %I 扩展到文件的大小 %~$PATH:I - 查找列在路径环境变量的目录，并将 %I 扩展 到找到的第一个完全合格的名称。如果环境变量名 未被定义，或者没有找到文件，此组合键会扩展到 空字符串可以组合修饰符来得到多重结果: %~dpI - 仅将 %I 扩展到一个驱动器号和路径 %~nxI - 仅将 %I 扩展到一个文件名和扩展名 %~fsI - 仅将 %I 扩展到一个带有短名的完整路径名 %~dp$PATH:I - 搜索列在路径环境变量的目录，并将 %I 扩展 到找到的第一个驱动器号和路径。 %~ftzaI - 将 %I 扩展到类似输出线路的 DIR usebackq，增强型参数 原来的for语句中第一个括号内的写法要做如下变动： 如果第一个括号里的对象是一条命令语句，原来的单引号&#39;要改为后引号`； 如果第一个括号里的对象是字符串，原来的双引号&quot;要改为单引号&#39;； 如果第一个括号里的对象是文件名，要用双引号&quot;括起来。 for 语句不能直接读取Unicode编码的文本，需要借助type或more 预处理机制逐条，命令关键字，运算符，开关、参数，变量引用… 所有的变量引用都已被替换成字符串常量，变量值在复合语句内部被改变，不会影响到语句内部的其他任何地方。 延迟变量的扩展行为在适当位置使用 SetLocal EnableDelayedExpansion 语句，把原本使用百分号对闭合的变量引用改为使用感叹号对来闭合 1234@echo offSetLocal EnableDelayedExpansionset num=0&amp;&amp;echo !num!pause 在适当的位置使用 call 语句，把变量引用的单层百分号对改为双层百分号对 123@echo offset num=0&amp;&amp;call echo %%num%%pause 为什么要使用变量延迟？因为要让复合语句内部的变量实时感知到变量值的变化。 复合语句有：for 语句、if else 语句、用连接符&amp;、||和&amp;&amp;连接的语句、用管道符号|连接的语句，以及用括号括起来的、由多条语句组合而成的语句块。 特殊字符 @，隐藏命令的回显 ~ 在for中表示使用增强的变量扩展 在set中表示使用扩展环境变量指定位置的字符串 在set /a中表示按位取反 ^ 取消特殊字符作用，字符转义； echo输出时，可以将^后的下一行的字符串拼接在当前行后输出 在set /a中是按位异； 在findstr /r的[]中表示不匹配指定的字符集 &amp; 命令连接字符，顺序执行多条命令，不论命令是否执行成功 在set /a中是按位与 | 管道符，就是将上一个命令的输出，作为下一个命令的输入;传输执行结果 在帮助文档中表示其前后两个开关、选项或参数是二选一的 在set /a中是按位或 &amp;&amp;，连接两个命令，&amp;&amp;前命令执行成功，则执行&amp;&amp;后命令；传输执行状态 ||，连接两个命令，||前命令执行失败，则执行||后命令。传输执行状态 ()，命令包含或者是具有优先权的界定符 [] 在帮助文档表示其中的开关、选项或参数是可选的 在findstr /r中表示按其中指定的字符集匹配 + copy将很多个文件合并为一个文件 在set /a中是加法 - 范围表示符，如日期的查找，for命令里的tokens操作中就可以用到这个字符 在findstr /r中连接两个字符表示匹配范围； -跟在命令的/后表示取反向的开关。 * 通配符，代表任意个任意字符 在set /a中是乘法 在findstr /r中表示将前一个字符多次匹配 findstr 正则表达式中，.代表任意字符，*代表0个或多个，.*表示0个或多个任意字符 / 表示其后的字符（串）是命令的功能开关（选项） 在set /a中表示除法 = 赋值符号，用于变量的赋值 在set /a中表示算术运算 :，标签定位符，可以接受goto命令所指向的标签 &quot; &quot; 界定符，带有空格的路径，一些命令也需要&quot; &quot;符号 在for /f中将表示它们包含的内容当作字符串分析 在for /f &quot;usebackq&quot;表示它们包含的内容当作文件路径并分析其文件的内容 在其它情况下表示其中的内容是一个完整的字符串，其中的&gt;、&gt;&gt;、&lt;、&amp;、|、空格等不再转义 &gt; 命令重定向符，覆盖方式重定向提示信息 在findstr /r中表示匹配单词的右边界，需要配合转义字符\使用 &gt;&gt;，命令重定向符，追加方式重定向提示信息 &lt; 将其后面的文件的内容作为其前面命令的输入 在findstr /r中表示匹配单词的左边界，需要配合转义字符\使用 \ 当前路径的根目录 在findstr /r中表示正则转义字符 &#39; &#39; 在for /f中表示将它们包含的内容当作命令行执行并分析其输出 在for /f &quot;usebackq&quot;中表示将它们包含的字符串当作字符串分析 . .当前目录，..上一层目录 在路径中的文件名中出现时：最后的一个.表示主文件名与扩展文件名的分隔 $，在findstr命令里面表示一行的结束 ``，在for /f中表示它们所包含的内容当作命令行执行并分析它的输出 ? 在findstr /r中表示在此位置匹配一个任意字符 ?在路径中表示在此位置通配任意一个字符 紧跟在/后表示获取命令的帮助文档 ! 当启用变量延迟时，使用! !将变量名扩起来表示对变量值的引用 在set /a中表示逻辑非，比如set /a a=!0，这时a就表示逻辑1 % %，非延迟环境变量引用符号 ,，相当于空格 ;，命令相同的时候，可以将不同的目标用;隔离开来，但执行效果不变。如执行过程中发生错误则只返回错误报告但程序还是会继续执行。 &quot;\&gt;&quot;、&quot;\&lt;&quot;、&quot;\@&quot;、&quot;\|&quot;不能实现自己想要的功能，将特殊字符替换成ASCII表中的十进制数，然后再把ASCII的10进制数换算成ASCII字符处理。 变量set varName=varValue set /p var=请输入变量的值：，等待用户输入到var变量中 set /p= hello world! &lt;nul set /a 运算表达式 内部处理变量if defined和set /a因为都是在内部处理变量，而不是在预处理过程中处理，也就是说不需要使用变量扩展标记，所以天然具有变量延迟的特性； 至于逗号表达式，这是set /a才能处理的特性； cmd的预处理过程，是把两个表达式理解为一句，而不是一个语句块，所以自然不可能延迟扩展变量。 Windows Command Line |Shell List and Reference]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>batch</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[《Web重构笔记》系列归档]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction.html</url>
    <content type="text">
      <![CDATA[《Web重构笔记》系列归档 Web重构笔记(1): 为什么要写这个系列 Web重构笔记(2): 来套Web重构装备 Web重构笔记(3): Web重构前的分析 Web重构笔记(4): 切图与标注 Web重构笔记(5): 搭建工程目录 Web重构笔记(6): 语义化 Web重构笔记(7): 样式、结构、行为分离分割 Web重构笔记(8): 主干结构 Web重构笔记(9): 栅格结构 Web重构笔记(10): 组件结构 Web重构笔记(11): 样式预处理与样式声明 Web重构笔记(12): 最后]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(12): 最后]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-12-summary.html</url>
    <content type="text">
      <![CDATA[每篇写完，删了又删，只想再简单点、再少点，希望能快速看完，并能产生共鸣。 Web重构，选择好基础的框架/库、模块组件，合理分布静态资源，处理好标签和属性语义，基于OOP分离分割各代码，注意样式声明方式，页面结构必能合理，性能必能得到提升，可复用性、可伸缩性、可维护性显然得到实现，各种优点和好处，都是前期统筹和规范操作带来的，让优良之处成为一种习惯，而不是刻意为之。 毕竟最后的结果确定工作的成败，开发方式根据项目周期、团队技能现状，采用“渐进增强”、“优雅降级”方式开发，对于低版本客户端不支持的，能传递基本信息即可，没必要受兼容性的束缚。 最后，“不应当急于求成，应当去熟悉自己的研究对象，锲而不舍，时间会成全一切。凡事开始最难；然而更难的是何以善终”。]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(11): 样式预处理与样式声明]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-11-css-pre-processors-and-declaration.html</url>
    <content type="text">
      <![CDATA[样式预处理样式最基本的语法(Syntax)是 Selectors { Properties:Values }，就是一个声明(Declaration)，告诉排版引擎：将我声明的选择器(Selectors)，按我的呈现规则(Rules)来渲染。 面向设计稿书写完样式，日常最基本需求：如颜色或内外间距要修改、公用部分样式、层级嵌套选择器书写、组件化样式分割然后合并、兼容性前缀…，都是要手动一条条修改添加；高级点的需求，如颜色计算、数学计算、条件执行、循环处理，要么借助第三方工具手动操作，要么无解。 因此，我们需要一个样式“工程化”的解决方案，因此，CSS预处理来了，它提供了编程语言中基本语法和函数接口等一般编程所需的抽象机制，可以“编译”打包成符合CSS标准的样式文件，这样逻辑化、程序化CSS代码，好重用、好维护、好扩展。另外还有PostCSS这类CSS后处理实现。区别在于预处理器需要先按特定的语法和逻辑规则书写代码，然后进行编译，后处理器是直接操作CSS源代码进行解析编译。 CSS预处理目前实现有Sass、Less、Stylus； 它们大多具有“变量(Variables)嵌套(Nesting)、混合(Mixins)、扩展(Extends)、色彩函数(Color Operations)、循环(Loops)、Math、导入(Imports)、流程控制声明(if/else/for/each/while)、运算符”等编程语言风格的语法和功能，使用场景、需求方案上都差不多，拥护群体都多； 熟悉一种，切换到另一种也不是难事，最终都是要结合中大型项目和打包才能发挥其作用； 如果有用到像jade这种缩进式风格模板引擎(Template Engine)的，就选Sass或Stylus，接近CSS语法的就选Less、Scss； 建议参考Bootstrap和WeUI源码。 预处理只是囿于当前标准规范在技术方案上的权宜之计，随着需求，必定会有标准规范和更先进的技术方案诞生(适用于其它方面)，可以关注cssnext了解CSS Features。 样式声明遵循选定的规范，不用标签选择器、全局选择器，不用!important。 书写样式，建议采用Emmet方案，快。 建议按以下顺序声明样式，便于维护： 影响文档流的属性 盒模型的属性 排版属性 背景装饰属性 生成内容属性 其它CSS3属性(兼容性前缀由autoprefixer打包添加) 盒模型方位顺序：上、右、下、左； 不建议按属性首字母顺序声明样式，如position: absolute;中的top/right/bottom/left定位声明，还有width/height的声明，中间会有其它属性间隔，不能便捷的添加和修改。 参考：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227/* # 样式声明顺序 */selector &#123; /* ## 布局 / Layout */ /* ### 显示、定位 / Display, Position */ display: ; visibility: ; float: ; clear: ; position: ; top: ; right: ; bottom: ; left: ; z-index: ; /* ### Flex */ flex-direction: ; flex-wrap: ; flex-flow: ; justify-content: ; align-items: ; align-content: ; flex-grow: ; flex-shrink: ; flex-basis: ; flex: ; align-self: ; order: ; /* ### Grid */ grid: ; grid-area: ; grid-template: ; grid-template-areas: ; grid-template-rows: ; grid-template-columns: ; grid-column: ; grid-column-start: ; grid-column-end: ; grid-row: ; grid-row-start: ; grid-row-end: ; grid-auto-rows: ; grid-auto-columns: ; grid-auto-flow: ; grid-gap: ; grid-row-gap: ; grid-column-gap: ; justify-items: ; align-items: ; place-items: ; justify-self: ; align-self: ; place-self: ; justify-content: ; align-content: ; place-content: ; /* ### Columns */ columns: ; column-gap: ; column-fill: ; column-rule: ; column-rule-width: ; column-rule-style: ; column-rule-color: ; column-span: ; column-count: ; column-width: ; /* ## 盒模型 / Box */ /* ### Box */ box-sizing: ; width: ; min-width: ; max-width: ; height: ; min-height: ; max-height: ; margin: ; margin-top: ; margin-right: ; margin-bottom: ; margin-left: ; padding: ; padding-top: ; padding-right: ; padding-bottom: ; padding-left: ; overflow: ; overflow-x: ; overflow-y: ; resize: ; /* ### Border */ border: ; border-top: ; border-right: ; border-bottom: ; border-left: ; border-width: ; border-top-width: ; border-right-width: ; border-bottom-width: ; border-left-width: ; border-style: ; border-top-style: ; border-right-style: ; border-bottom-style: ; border-left-style: ; border-radius: ; border-top-left-radius: ; border-top-right-radius: ; border-bottom-left-radius: ; border-bottom-right-radius: ; border-color: ; border-top-color: ; border-right-color: ; border-bottom-color: ; border-left-color: ; outline: ; outline-color: ; outline-offset: ; outline-style: ; outline-width: ; /* ## 背景装饰，文字排版 / Backgrounds, Fonts */ /* ### box-shadow */ box-shadow: ; /* ### Background */ background: ; background-attachment: ; background-clip: ; background-color: ; background-image: ; background-repeat: ; background-position: ; background-size: ; /* ### Text */ color: ; font: ; font-family: ; font-size: ; font-smoothing: ; font-style: ; font-variant: ; font-weight: ; letter-spacing: ; line-height: ; list-style: ; text-align: ; text-decoration: ; text-indent: ; text-overflow: ; text-rendering: ; text-shadow: ; text-transform: ; text-wrap: ; white-space: ; word-spacing: ; /* ## CSS3 动画 / Animation */ /* ### Transform */ backface-visibility: ; perspective: ; perspective-origin: ; transform: ; transform-box: ; transform-origin: ; transform-style: ; /* ### Transition */ transition: ; transition-delay: ; transition-duration: ; transition-property: ; transition-timing-function: ; /* ### Animation */ animation: ; animation-name: ; animation-delay: ; animation-duration: ; animation-iteration-count: ; animation-play-state: ; animation-timing-function: ; animation-fill-mode: ; /* ## 表格 / Table */ table-layout: ; border-collapse: ; border-spacing: ; caption-side: ; empty-cells: ; vertical-align: ; /* ## 其它 / Other */ content: ; quotes: ; cursor: ; opacity: ; speak: ;&#125; 扩展阅读： MDN: CSS介绍 - 选择器 An Introduction to CSS Pre-Processors: SASS, LESS and Stylus Using PostCSS Together with Sass, Stylus, or LESS CSS preprocessors compared: Less vs. Sass vs. Stylus - EY-Intuitive Sass vs Less vs PostCSS 2018 Comparison | StackShare Compare ◩ CSS PREprocessors DSL 谈谈DSL以及DSL的应用]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(10): 组件结构]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-10-component.html</url>
    <content type="text">
      <![CDATA[主干和栅格是文档的骨骼，内容依赖组件进行呈现。 组件，主要是围绕交互体验对文字、图片、视频、表单等数据信息进行排版设计，以提供可复用、好维护、识别度统一规范的视觉呈现。 框架中会提供丰富的组件，便于快捷开发功能型网页应用；展示型网页建议开发者平时多积累一些常用图文视频组件。 通过module包裹组件，并设置各组件上下间距。 123456789&lt;div class="module"&gt; &lt;header class="module__header"&gt; &lt;h3 class="module__title"&gt;模块标题&lt;/h3&gt; &lt;/header&gt; &lt;main class="module__container"&gt; &lt;!-- Component --&gt; &lt;/main&gt; &lt;footer class="module__footer"&gt;&lt;/footer&gt;&lt;/div&gt; 如按钮结构： 12&lt;button class="btn btn-default" type="button"&gt;按钮&lt;/button&gt;&lt;button class="btn btn-primary btn_large" type="button"&gt;按钮&lt;/button&gt; 如选项卡组件结构： 123456789101112&lt;div class="tab"&gt; &lt;ul class="tab__nav"&gt; &lt;li class="tab__trigger tab__trigger_active"&gt;trigger 1&lt;/li&gt; &lt;li class="tab__trigger"&gt;trigger 2&lt;/li&gt; &lt;li class="tab__trigger"&gt;trigger 3&lt;/li&gt; &lt;/ul&gt; &lt;div class="tab__panel"&gt; &lt;div class="tab__container tab__container_active"&gt;container 1&lt;/div&gt; &lt;div class="tab__container"&gt;container 2&lt;/div&gt; &lt;div class="tab__container"&gt;container 3&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 如手风琴结构： 1234567891011121314&lt;div class="accordion"&gt; &lt;div class="accordion__panel accordion__panel_active"&gt; &lt;div class="accordion__header"&gt;header 1&lt;/div&gt; &lt;div class="accordion__container"&gt;container 1&lt;/div&gt; &lt;/div&gt; &lt;div class="accordion__panel"&gt; &lt;div class="accordion__header"&gt;header 2&lt;/div&gt; &lt;div class="accordion__container"&gt;container 2&lt;/div&gt; &lt;/div&gt; &lt;div class="accordion__panel"&gt; &lt;div class="accordion__header"&gt;header 3&lt;/div&gt; &lt;div class="accordion__container"&gt;container 3&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 如图文结构： 12345678910111213&lt;div class="media-normal"&gt; &lt;div class="media__object"&gt; &lt;a href="#"&gt; &lt;img class="img-responsive" src="http://placeholder.qiniudn.com/220x132/ff9500/000" alt="一张配图" width="width" height="height"&gt; &lt;/a&gt; &lt;/div&gt; &lt;div class="media__caption"&gt; &lt;h4 class="media__title"&gt;&lt;a href="#"&gt;一个标题&lt;/a&gt;&lt;/h4&gt; &lt;div class="media__abstract"&gt; &lt;p&gt;一段简要信息&lt;/p&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 组件嵌套层级不要冗余，有条理，结构及命名要有语义。]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(9): 栅格结构]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-9-grid-layout.html</url>
    <content type="text">
      <![CDATA[页面由几个主干结构支撑和区分，主干结构(Site/Page)内部由多个区块(Section)组成的布局，区块作为弹性布局或定宽布局的钩子，可以实现通栏背景。区块内部则是栅格列(Grid)，格子列里是各模块(Module)和组件(Component)，各模块和组件可有边框、内外边距。 栅格的实现：将区域按比例纵(Column)横(Row)划分成多个单元，各单元间距一致。 关键的三个数值：Count(栅格划分的个数)、Width/Height(栅格单元尺寸)、Gutter（槽宽/间距）； 选择了框架和库，会带有网页栅格模块，如Bootstrap、YUI、Ant Design、Element UI、iView；也可以从框架和库中单独抽取栅格部分出来，本篇案例是从PureCSS中抽取： 123456789101112&lt;section class="section"&gt; &lt;div class="section__wrapper"&gt; &lt;div class="pure-u-3-8"&gt; &lt;!-- module --&gt; &lt;/div&gt; &lt;div class="pure-u-5-8"&gt; &lt;div class="gutter"&gt; &lt;!-- module --&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/section&gt; 左右间距的实现有两种方案，如果不考虑IE8以下浏览器，可以直接给列选择器声明box-sizing: border-box; padding-right: $grid-gutter-width/2; padding-left: $grid-gutter-width/2;样式属性(要兼容IE8不可给列选择器声明min/max-width/height)；如果要兼容旧浏览器可以采用 polyfill 或在列选择器中再添加一个只用来控制间距的层&lt;div class=&quot;gutter&quot;&gt;&lt;/div&gt;。 栅格用结构层不设置边框和外边距。 传统布局方案可以采用float、display: inline-block/table/table-cell、position实现，现代浏览器可用采用进入“候选推荐标准”阶段的flexbox布局模型；也可以尝试尚在“首个公开工作草案”阶段的grid布局模型。 经过主干结构和栅格结构，至此文档大致如下图所示： 扩展阅读： 网页栅格系统研究(1): 960的秘密 网页栅格化研究(2): 蛋糕的切法 网页栅格系统研究(3): 粒度问题 网页栅格系统研究(4)：技术实现 The Different Kinds of CSS Layout - CSS-Tricks 渐进增强式布局探讨(上) 渐进增强式布局探讨(下) W3C Process Document]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(8): 主干结构]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-8-tree-trunk.html</url>
    <content type="text">
      <![CDATA[前面章节方法论，从本章节开始实践。 布局中的层级关系，主要体现在主干结构、栅格结构、组件模块结构三部分，本篇讲主干结构。 主干结构按级别分成“站点”和“页面”，即site和page。如电商或门户站点，站点有统一的头尾、悬浮挂件，站点有很多不一样的子站和栏目。 站点主干结构12345678910111213141516171819&lt;div class="site__topbar"&gt; &lt;!-- nav, user info, sign --&gt;&lt;/div&gt;&lt;header class="site__header"&gt; &lt;!-- logo, menu, category, search, cart --&gt;&lt;/header&gt;&lt;main class="site__container"&gt; &lt;!-- page --&gt;&lt;/main&gt;&lt;footer class="site__footer"&gt; &lt;!-- service, copyright, beian --&gt;&lt;/footer&gt;&lt;div class="site__pendant"&gt; &lt;!-- qr, back to top --&gt;&lt;/div&gt; 页面主干结构12345678910111213141516171819&lt;div class="page"&gt; &lt;header class="page__header"&gt; &lt;!-- logo, nav --&gt; &lt;/header&gt; &lt;main class="page__container"&gt; &lt;!-- container --&gt; &lt;/main&gt; &lt;footer class="page__footer"&gt; &lt;!-- service, copyright, beian --&gt; &lt;/footer&gt; &lt;div class="page__pendant"&gt; &lt;!-- qr, back to top --&gt; &lt;/div&gt;&lt;/div&gt; class=&quot;site__*&quot; 、class=&quot;page__*&quot; 作为主干结构部分，不声明 border, margin, padding, float 等样式属性，主干结构主要用来表意，做各页面进出切换效果，节假日、做促销活动时可以挂个情景背景。]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(7): 样式、结构、行为分离分割]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-7-decoupling.html</url>
    <content type="text">
      <![CDATA[Web重构工作主要是语义化排版文档信息，排版文档信息的最佳实现就是基于OOP分离分割结构、样式、行为。 分离分割皆为解耦。 分离，使HTML、CSS、JavaScript三基石职责清晰，HTML逻辑化内容，CSS视觉呈现，JavaScript承载控制、驱动、交互； 分割就是模块化、组件化，对系统各业务各功能按一定粒度进行分割、解耦、独立处理，减少冗余，提升可靠性、统一性、复用性、扩展性、维护性。 各业务各功能涉及到基础层、中间层、应用层呈现交互等技术环节，同时受制于工程需求、项目周期、角色协作等因素，分割粒度粗细要把控好，找到合适的平衡点。 模块化、组件化都是为了解耦和封装，把事务分割成小单元； 模块化侧重的是拆分、接口和功能； 组件化侧重的是重用、呈现和交互。 Web重构，不能通过文件的组织分布来谈模块化、组件化，要从OOP的角度去分析和实现，尤其是SPA开发，结构、样式、脚本文件组织不同于传统的Web开发方式，其侧重JavaScript在控制、驱动、交互方面的承载力，SPA中JavaScript决定一切。 分离分离HTML、CSS、JavaScript，不限于文件方式隔离，以OOP思想作为指导。 不可在HTML结构标签上写行内样式， 不可在HTML结构标签上定义DOM0级事件， 不通过JavaScript在标签上操作 style 属性控制样式。 分割在分离的基础上再各个进行分割。 HTML结构，分割成站点级和页面级主干结构、栅格结构、组件结构， CSS结合预处理分割成Variables/变量、Mixins/混合、Utilities/辅助类(normalize, reset, visibility, position …)、Layout/布局(section/grid)、Components/组件(alert, popover, modal, dropdown, tooltip, accordion, tabs, slide, media …)、Pages/页面、Themes/主题等单元， JavaScript根据选定的CommonJS、AMD、CMD、ES6等规范，并结合引入的框架和库定义模块和组件，分割成Common/通用、Components/组件、View/页面等单元， 组合构建最后，使用Gulp、Webpack、Rollup、Babel等工具及相关插件组合模块和组件，打包构建成目标宿主环境支持的代码。 Web重构中的模块化、组件化实现，是对模块和组件的定义与加载管理。]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(6): 语义化]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-6-semantics.html</url>
    <content type="text">
      <![CDATA[语义化概念：通过丰富的语义关系对数据进行逻辑化描述，便于数据人机可读、检索挖掘和共享交换，实现信息处理的自动化和智能化；即人类提供良好结构的、作为人能识别的数据给机器，让不同机器能准确高效的意会和处理数据反馈给人类。 语义化实现方案有多种，如RDF、RDFa、Microformats、Microdata等规范，虽其复杂性、数据模型、属性类型等特性不尽相同，但都支持HTML5语言，项目如有特定需求可采用相关规范，实现丰富的语义关系。本篇Web语义化仅从HTML5语言标准下的“标签语义”和“属性命名语义”两部分展开。 标签语义Web重构工作主要是语义化排版文档信息，构建语义明确、结构清晰的文档，便于浏览器解析渲染、搜索引擎建立索引抓取页面，提升内容的交互性、可读性和可维护性，视觉呈现上即使没有引入样式，人还是能“愉快”的阅读主体内容，如标题就是标题、段落就是段落、列表就列表… 根据文档特征，在HTML 4.01规范中定义了大量的语义标签，如文本、列表、表格、链接、媒体对象、表单等范畴下的标签元素；在HTML 5中更为详细的规范化了文档特征，添加了新的标签元素用以更明确的定义和描述文档的结构，并且对所有元素按 Metadata、Flow、Sectioning、Heading、Phrasing、Embedded、Interactive 等属性重新定义了分类规则，如下图(来源：W3C/HTML 5.2 / 3.2.4.2. Kinds of content)： 合理使用语义标签，主要是分明层次嵌套、清晰标签职责。 属性命名语义属性命名语义，主要是class、id、data-*等属性的命名，其中最主要的是class属性命名，主要有OOCSS、BEM、SMACSS、SUITCSS、Atomic等方案，各种方案都是意图通过样式命名让文档具备逻辑表达能力。OOCSS主要侧重样式的抽象、独立、封装与复用，BEM、SMACSS、SUITCSS主要侧重减轻样式对HTML层级结构嵌套依赖，Atomic主要侧重剥离具体样式表现的特性。 属性命名依赖于HTML结构，早期在项目中尝试过长命名、短命名方案，团队小、项目小都还可以定义与维护，在多人参与的一定规模的项目中，长命名kebab-case会变得很长很晦涩，短命名层级嵌套会变得越来越深，总有队友深怕会与他人产生冲突刻意为之。 属性命名具体实现建议： 采用BEM + OOCSS + Atomic + SCSS/LESS/Stylus/PostCSS组合方案 样式用属性使用.class，数据钩子使用#id 不用‘大小、颜色、方位、形状’等表象的词 JavaScript钩子属性名采用j_lowerCamelCase前缀加小驼峰方式 BEM规则可参考： Block独立模块：中横线 Element子元素：俩下划线 Modifier模块状态：一个下划线 Block下的所有Element不考虑层级嵌套关系，扁平化处理都属于Block，即连续的__下划线只能出现一次 BEM实现为： 模块：.block 模块_状态：.block_modifier 模块__子元素：.block__element 模块__子元素_状态：.block__element_modifier 附上常用命名词： 用途 ClassName 主次 primary, secondary, accent, weak, bold, light 建议用于变量 大小 base, normal, regular, small, medium, large, xlarge, xxlarge, xxxlarge 建议用于变量 结构 site, page, topbar, header, footer, container, title, main, content, aside, pendant, section, module, wrapper, inner, row, column 导航 nav, navigation, navbar, menu, breadcrumb, prev, next, first, last, pagination, pager, forward, back, up 列表 list, item, group, panel 组件 alert, dialog, popover, modal, dropdown, tooltip, accordion, collapse, tabs, carousel, slide, media, card, colorpicker, timepicker, datepicker, datetimepicker, calendar, switch, select, radio, checkbox, transfer, upload, cascader, tree-select, label, badge, avatar, backtop, loading, spin, message, notification, overlay, steps, timeline, progress, scroll, rate, divider, spacer, gallery 页面 index, archive, detail, special, contact, search, about, forum 状态 default, toggle, active, current, cancel, checked, hover, focus, success, fail, warning, danger, info, error, close, on, off, in 常用 vertical, horizontal, btn, more, icon, attach 扩展阅读： An Uber-comparison of RDFa, Microdata and Microformats]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(5): 搭建工程目录]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-5-architecture.html</url>
    <content type="text">
      <![CDATA[Web重构搭建工程目录，即是合理分布项目静态资源。 目录和文件名，只能是英文、数字和-字符组成，名称不宜过长和生涩，不加排序前缀，干扰阅读和查找文件名，层级不宜过深，这样便于后期维护调整，交付后端程序清晰明了。 组织目录和文件，处理好两个点：一是设计模式框架中类型，二是业务功能； 页面型、内容型多页面项目项目目录规划 移动Web端 &srarr; Project-H5 微信端 &srarr; Project-WeiXin 桌面Web端 &srarr; Project-PC Android端 &srarr; Project-Android AndroidTV端 &srarr; Project-AndroidTV iOS端 &srarr; Project-iOS Linux端 &srarr; Project-Linux UWP端 &srarr; Project-UWP WP端 &srarr; Project-WP 通用页面规划 通用列表页 通用详情页 通用评论页 通用图片列表页 通用图片详情页 通用视频列表页 通用视频详情页 栏目/频道页面规划 栏目-首页 栏目-列表页 栏目-详情页 栏目-其它业务操作页面 用户中心页面规划 账户相关 个人资料相关 业务相关 积分等级 设置 例：采用Gulp打包、SCSS预处理12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061+ project-a/+ project-b/+ project-c/...- project-x/ - dist/ (打包文件) - css/ main.min.css + font/ + img/ + lib/ + js/ index.html about.html archive.html + dev/ (开发预览，样式脚本都未合并或混合，方便调试) - src/ + font/ (Icon) + img/ (项目用图形图标) - js/ + common/ (内部编写公用模块脚本，打包成common.min.js单文件) entry.js (入口文件，定义一个全局变量，项目所有脚本对象都挂在它名下，即类似声明一个命名空间，避免污染) + view/ (每个页面的脚本) + lib/ (第三方依赖，不可改动) - page/ (页面，采用`gulp-file-include`从tpl引入模块) index.html about.html archive.html - scss/ (所有样式打包成main.min.css单文件) + component/ (组件类) + core/ (核心样式) + dependencies/ (第三方依赖) + mixins/ (混合器) + variables/ (全局样式变量) _component.scss _mixins.scss _variables.scss app.scss (全局样式) - tpl/ (模块) page-header.html page-breadcrumb.html page-footer.html page-aside.html page-meta.html page-pendant.html page-style.html script-head.html script-foot.html site-topbar.html site-footer.html .gitignore (Gulp task 代码校验配置、Git 版本控制配置) .babelrc .csslintrc .eslintignore .eslintrc .htmlhintrc .jshintignore .jshintrc .scss-lint.yml gulpfile.js (Gulp配置) package.json (项目配置) 单页面：业务功能优先、类型其次的目录规划一般使用设计模式框架 CLI 和打包工具实现 1234567891011121314151617181920+ project-a/+ project-b/+ project-c/...- project-x/ - node_modules/ - dist/ - dev/ - src/ + common/ + feature-a/ + feature-b/ + feature-c/ ... - feature-x/ xxxx.js/ts xxx.svg/png/jpg xxx.css/scss - index.html - lint]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(4): 切图与标注]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-4-generate-assets.html</url>
    <content type="text">
      <![CDATA[本篇讲从设计稿中提取基础资源和信息：切图与标注。 合格的设计师，会使每个元素组基于矩形层，形成一个个单元，并做好图层分类及命名，不在‘组’上使用蒙版，按照栅格化模块化设计，考虑各组件的复用性、扩展性和兼容性。 遇到不合格的设计师，那就把设计稿退回去，深入交流沟通。 不建议设计师切图，因为要考虑到图形压缩格式、编码实现方式及图形替代方案。 不要直接用Adobe Photoshop/Fireworks划切片范围导出切片。 采用lower_snake_case命名规则修改要导出的组或图层名称，命名方式为模块/组件_用途_状态，绝不用表象的具体词汇，如大小尺寸、颜色、形状、新旧之类。推荐Renamy进行批量命名。 输出切片方式有很多，目前最新版CC非常便捷，选择要导出的组和图层，鼠标右键导出为，进行“缩放设置、文件格式、图像大小、画布大小”配置后导出即可，并且还可以复制图层CSS样式；也可以选择切图插件，如Cutterman。 图标不建议做 Sprite 图，而是采用Web Font，推荐Iconfont。 方便接下来编码读取页面元素信息（尺寸、文字、色彩、间距、位置、属性），强烈建议“标注”，推荐Parker、Ink、PxCook。 也可以使用Zeplin、蓝湖等在线产品设计协作平台，它们提供了标注切图、页面逻辑、批注讨论、原型演示、版本管理等丰富的功能。 各种列表配图、焦点轮播图、详情页用图、Banner，产品设计阶段应已按宽高比指定了多种尺寸，推荐用Placeholder、temp.im占位。 从设计稿提取了基础资源，接下来可以搭建工程目录了。]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(3): Web重构前的分析]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-3-forecast.html</url>
    <content type="text">
      <![CDATA[本篇讲重构前的分析。从“工作状态、工作环境和工作角色”和具体重构工作两方面分析。 凡是经过考验的朋友，就应该把他们紧紧地团结在你的周围比较理想的工作状态：制定了各种设计和开发规范，各团队之间邮件、团队内部即时通讯工具或声波传输沟通，对已有的或将要孵化的项目和产品，或多或少会有参与和认识，较早的进入开发环境中，进行准备、分析和实施相关的思考。但也可能会是产品需求未确定和频繁变更，技术规范、产品文档和开发文档尚未定义，已经要求团队进行并行开发的充满风险的工作状态。 工作环境多是公司内部，但也有可能接触或成为 Outsourcing 开发伙伴，将会经历工期、需求、各规范、技术栈、开发模式、开发流程、产品性能迭代等方面的严峻考验。 接触过产品需求、交互文档中的各种描述，如一级页面二级页面三级页面，直接从不确定的类目名定义具体的模块，造成“这个就是以前的/上一个版本的**分类”；接触过设计师比较随意，页面无栅格，图层无分组不命名，图标不矢量处理，间距颜色字体凭手感视觉；也有设计师非常严谨，栅格参考线锁定，组件式所有模块置于一个PSD并标注，图标iconfont拉你进项目成员组；也接触过其他同行的编码，差不多和设计稿相同的经历； 综上所述，项目开发越多，跨项目周期、跨组织跨地域、跨角色的协作问题也会越多，需要结合项目参与人员、时间节点和伸缩性等因素分析，作出合适的技术选型，和行之有效的沟通。 如果做好心理准备，一切准备都已经完成到具体重构工作的分析，从收到设计师的稿，要考虑：站点风格，如何栅格，内容、结构、样式、行为如何分离，站点、页面公用部分和业务模块组件有哪些，主次颜色，行高是多少，标题、段落字体字号有哪几种，图文组合有几种，列表有几种，模块内外间距是多少，ICON图标有哪些，响应式布局处理… 重构不是完全还原设计稿，是基于设计稿，提炼和整理，分析和统计，得到各个方面数据。 分析完成，开始动手。]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(2): 来套Web重构装备]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-2-getting-started.html</url>
    <content type="text">
      <![CDATA[本篇主要从语言入门、规范、工具、构建、库、框架、版本控制等各方面展开，篇幅会有点长，涉及到的工具类，会另开博文详细介绍。 另外说明Web重构是Web前端的开始，主要侧重Web页面，如实现布局与兼容，符合W3C标准规范，组件化框架化，实现页面视觉效果，提升代码的可维护性、可读性和性能优化。 三生万物HTML、CSS、JavaScript 是为Web开发三基石。 人类社会的工作，各方面各环节都是林林总总，Web开发亦是如此，具体的可以查阅Web Developer Roadmap、Frontend Knowledge Structure，看看Web开发技能树。各“分支”涉及知识点非常广，对于Web重构工作，最初、最终、最重要的还是三基石。 打好基础是持久战，要理论和实践结合，不能急于求成。不建议看“七天入门/学会”、“从入门到精通”之类视频、帖子和书籍作为教程，甚至都不建议将其作为辅助指导！前期不建议报培训班。 一门学科和技术，还是需要一个系统的学习过程，这也是本系列文章没有相关基础知识的原因。 入门学习路线：HTML &srarr; CSS &srarr; JavaScript HTML，很多时候仅仅是作为标签标记使用，但它不仅仅就是十几个标签，像Local Storage、SVG、Canvas、Web Workers等部分，必须要结合JavaScript、几何学、线程等知识才能讲解的下去，没法单纯的独立的全面展开，这已经不是一本书就能解释清楚的了。目前已有的书籍，像Mark Pilgrim的《HTML5揭秘》，知识点如蜻蜓点水，留下太多扩展阅读链接；而像Adam Freeman的《HTML5权威指南》，太臃肿了，某些章节写了进来，但又不够全面和详细，如第4、5章及第16章节之后的样式与脚本部分。即使它第3、6-15章对了解基本的HTML有帮助，但被翻译弄得比较尴尬，如’Void Elements’翻译为’虚元素’。因此，HTML这块我不推荐阅读书籍，建议先阅读MDN“开始 HTML”，之后在RUNOOB: HTML教程系统学习，然后再阅读MDN“元素参考、属性参考、行内元素、块级元素、元素内容模型”等内容，作为总结和回顾。 很多Web开发初学者多是去www.w3school.com.cn，我不建议参考这个网站的内容，其部分内容过时和有问题。可以阅读www.w3schools.com。 CSS学习推荐Lea Verou的《CSS揭秘》和Eric A. Meyer的《CSS权威指南》，顺序是：《CSS权威指南》第1-4章先看几遍，再跟着《CSS揭秘》全书动手做，再回到《CSS权威指南》剩下章节。熟悉之后可以去W3Help查看一些兼容性问题，。 JavaScript学习推荐Nicholas C.Zakas的《JavaScript高级程序设计(第3版)》，学习路线：先A部分(第1-7章)必知必会；深入了解B部分(第10-14章)；接着深入了解C部分(第20、21章)；再接着深入D部分(第8、23章)；再了解E部分(第9、17、22、24章，附录A)；最后读一下F部分(第18、19、15、16、25章，附录B、C、D)。其中B、C、D部分实际工作中会运用到第三方库。F部分附录章节，由于第3版成书年代较早，许多新技术未收录，这里了解一下即可，第4版今年(2018年)7月底才发售，里面会有ES6之后的相关技术介绍；David Flanagan的《JavaScript 权威指南》适合做字典。 经过上面的语言学习，或多或少知道一个HTML文档是怎么个情况了，源代码直接到浏览器运行，很方便。这时应该思考它肯定不会这么简单，抛出各种问题，如：多重样式权重优先级是怎样的呢？!important为什么要少用不用？ HTML、CSS、JavaScript可以写在一个文档中实现效果，可为什么要采用外部样式、脚本引入呢？为什么要合理运用h1~h6之类的HTML标签，为什么要合理命名CSS类？样式面向设计稿书写，连简单的调整颜色和字体都是体力活替换，有没有什么方法让它具备可编程性？多个页面模块相同怎么处理？脚本全局变量冲突不好控制，业务繁多功能复杂代码越来越臃肿？团队和技术现状如何选择一个合适的库/框架呢？大公司里怎样开发和部署前端代码？太多太多问题…打好语言基础，然后多去发掘问题关注问题分析问题，释然解决问题。 入门巩固学习推荐张容铭的《JavaScript 设计模式》、Douglas Crockford的《JavaScript 语言精粹》 JavaScript部分不在本系列中讨论，已经有《JavaScript高级程序设计》、《ES6 标准入门》、《JavaScript 设计模式》、JavaScript模块化之旅等资源，可以辅助深入学习和应用。 规所以正圆，矩所以正方编程规范部分，像代码命名风格、Tab/Space缩进之类，差不多是程序员的一种价值观，算是编程领域的圣战导火索。建议有了语言基础之后，读Nicholas Zakas的《编写可维护的JavaScript》，然后编码遵守HTML/CSS Style Guide、JavaScript Style Guide，不建议自己搞一套规范出来，建议接受大厂已有的成熟的“潜规则”；调教IDE/编辑器，使“格式化文档”与编码风格规则一致；了解变量名、方法名中UpperCamelCase、lowerCamelCase、lower_snake_case、UPPER_SNAKE_CASE、kebab-case、Camel_Snake_Case等命名风格，方便查阅和沟通。 代码需要校验，编辑器或构建工具中添加JSLint、JSHint、JSCS、ESLint、stylelint、HTMLHint这类工具，可以在代码编写时候或构建命令中，进行代码检验。 JavaScript 校验工具这块： JSLint，古老，不可配置，不可扩展，不可禁用许多特性的校验，Douglas Crockford之作 JSHint，可配置的JSLint版本 JSCS，代码样式检查，只捕获与代码格式化相关的问题，而不是潜在的bug或错误。已经与 ESLint 合并 ESLint，易于扩展，可自定义规则，可以插件形式安装更多的规则，Nicholas C. Zakas之作 一个 linting 工具是解决问题的一个很好的步骤，但是它基于一定的规则发现错误，具有一定的局限性。 工以利器为助开发工具、构建工具依赖开发环境，建议根据操作系统安装和配置好各环境平台，如：.NET Framework、Microsoft Visual C++ Redistributable Package、Nodejs、JDK、Python、Ruby。 开发工具也是编程领域的圣战导火索，如编辑器之神Vim和神的编辑器Emacs。 开发工具只要是紧贴当下技术更新的就可以了，然后按预算、硬件和调教精力筛选，无所谓哪一个IDE或编辑器。 预算足，微软家的Visual Studio(没有之一)，Jetbrain家的IDE，Adobe家的Dreamweaver最新版；预算不多可以考虑Sublime Text，没预算可以考虑Visual Studio Code、Github Atom、Adobe Brackets。不建议使用Hbuilder。 构建工具同样选择紧贴当下技术更新的就可以了，如当下结合使用Gulp、Webpack、Rollup、Babel； 调试工具推荐Chrome Developer Tools； 计算机硬件固态硬盘和8G以上内存。 枪，兵工厂Web重构中，并非是“九层之台，起于垒土”。 Web重构，有旧项目的改造和完善，涉及到架构的变动、业务功能的增删；也有新项目的建造，或大，或小；这里无论新旧，多是基于各种库和框架，很少全部原生CSS、脚本一砖一瓦式建之筑之。 库的作用主要是提供API，便捷操作DOM、AJAX和兼容各宿主环境事件(Event)，如jQuery、Zepto、axios，以及实现函数式编程来处理数据和事件，如Underscore、Lodash。还有许多库其功能仅仅专注某一事务，如Cookie操作、Local Storage、切换交互、视觉差交互、代码着色、宿主环境侦测、延迟加载、图表报表、游戏引擎等。 MVC、MVP、MVVM等框架，加以数据接口规范，主要作用是提供一套完整的、规模化的、跨平台的解决方案，复杂业务项目采用它的机制和工作流，可解耦数据、业务逻辑与视觉呈现，使项目得以按一定粒度拆分隔离，清晰化控制、调用、传递等关联环节，降低耦合，减少冗余混乱污染，减轻团队协作任务依赖带来的制约，统一实现风格，提高项目可伸缩性、可维护性，侧重底层驱动。当然，也提高了Web开发难度和成本。这些框架主要有Angular、React、Vue、Backbone、Ember、Meteor、Knockout、Polymer。一部分框架，还提供了UI层，如YUI、ExtJS、Dojo。 另一部分则是UI库，提供了一整套丰富的客户端组件和资源，UI库有独立设计不依赖其它库和框架，或为其它一种或多种库和框架设计。无依赖项的有Semantic UI、Foundation、Pure、Bulma等；有依赖项的有Bootstrap、EasyUI、Ant Design、iView、Element、WeUI、Onsen UI等。 还有另一类使用 JavaScript, HTML 和 CSS 等 Web 技术创建原生应用程序的软件开发框架，如React Native、Electron、Weex、PhoneGap/Cordova、Titanium、NativeScript、Ionic。 各框架在模块规范、加载器机制、应用性能、用户体验、技术门槛、开发部署等方面存在差异，至于选择哪种框架，一要看其功能、文档、活跃度，二要结合项目实际情况、团队技术水准；没有好不好，只有合不合适。 凡是过去，皆为序曲无论工程大小，无论个人还是团队，都需要采用版本控制系统，以便工程文件的协作、追踪、维护、备份和版本存储。 版本控制系统主要有以下几类： 本地版本控制系统，如RCS； 集中式的版本控制系统，如CVS、SVN、TFS，工具主要有VisualSVN Server、TortoiseSVN、QSvn、RapidSVN、SmartSVN、Versions、Cornerstone；集中式版本系统可以为每个开发者分配访问权限； 分布式版本控制系统，如Git、Mercurial、Bazaar，工具主要有GitLab、Gogs、Gitblit、Sourcetree、Git、Tower、TortoiseGit、TortoiseHg。 提供项目托管服务的有Bitbucket、Coding、GitHub、SourceForge等SaaS平台。 在线托管服务注意仓库的Public/Private属性，可以私有部署。 语言有了，规范有了，工具有了，架子有了，仓库有了，装备齐了，可以做了。]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title>
      <![CDATA[Web重构笔记(1): 为什么要写这个系列]]>
    </title>
    <url>%2Ftech%2Fpro-web-reconstruction-1-preface.html</url>
    <content type="text">
      <![CDATA[出于兴趣，选择从事Web重构工作，也非常幸运，能够将兴趣与工作结合在一起，既保证了公司和个人的收入，又能倒腾爱好。 到目前为止，一直就职于中小型互联网公司从事Web重构开发，在项目与技术结合方面，比较幸运的是项目有“旧衣翻新”，也有“无中生有”，技术点是“无所不用其极”；当然，在小团队中会有较多局限性，姑且不说新项目以当前团队力量很难采用Angular、React这类技术，就是已有项目的工作流中，都存在各种各样的问题，如需求变动频繁原型难定，设计师比较随意设计稿无栅格、未组件化模块化，前端定了规范还是会出现层级嵌套不合理、样式随意命名、脚本面向过程，后端不和前端玩一堆源码、console、debugger上线… 在小团队中，重构工作主要是跟PM和同事讨论下网站大概怎么个做法，从设计师那接稿输出HTML给后端，和市场、编辑互动做些活动专题，帮后端封装些功能性脚本。 平时较多关注阿里、淘宝、腾讯、京东、网易、百度等互联网技术团队及其开源项目；关注玉伯、寒冬、承玉、张鑫旭，阮一峰、CSS森林、css88等博客和SNS；w3cplus、w3help、CSS-Tricks、W3C、MDN、IBM DeveloperWorks、stackoverflow、infoQ、oschina、open-open、slideshare、segmentfault、V2EX、博客园、知乎、掘金等社区；还有在Github上Star一些项目… 在Web重构开发中，接触了很多优秀的人、优秀的项目，上线了很多项目； 所见，所闻，所事，所感，就促使我写下了这个系列文章，以抛砖引玉，以交流互动，以温故知新。 接下来的系列文章中，不涉及基础知识，大多是方法、分析和总结。 注：本系列成文于2014年，于2015年发布于博客园，今年(2018年)再次修订，As Little as Possible, as Much as Necessary，故再删再增。]]>
    </content>
    <categories>
      <category>tech</category>
    </categories>
    <tags>
      <tag>web</tag>
    </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2Fassets%2Ficonfont%2Ficonfont.js</url>
    <content type="text">
      <![CDATA[(function(window){var svgSprite='';var script=function(){var scripts=document.getElementsByTagName("script");return scripts[scripts.length-1]}();var shouldInjectCss=script.getAttribute("data-injectcss");var ready=function(fn){if(document.addEventListener){if(~["complete","loaded","interactive"].indexOf(document.readyState)){setTimeout(fn,0)}else{var loadFn=function(){document.removeEventListener("DOMContentLoaded",loadFn,false);fn()};document.addEventListener("DOMContentLoaded",loadFn,false)}}else if(document.attachEvent){IEContentLoaded(window,fn)}function IEContentLoaded(w,fn){var d=w.document,done=false,init=function(){if(!done){done=true;fn()}};var polling=function(){try{d.documentElement.doScroll("left")}catch(e){setTimeout(polling,50);return}init()};polling();d.onreadystatechange=function(){if(d.readyState=="complete"){d.onreadystatechange=null;init()}}}};var before=function(el,target){target.parentNode.insertBefore(el,target)};var prepend=function(el,target){if(target.firstChild){before(el,target.firstChild)}else{target.appendChild(el)}};function appendSvg(){var div,svg;div=document.createElement("div");div.innerHTML=svgSprite;svgSprite=null;svg=div.getElementsByTagName("svg")[0];if(svg){svg.setAttribute("aria-hidden","true");svg.style.position="absolute";svg.style.width=0;svg.style.height=0;svg.style.overflow="hidden";prepend(svg,document.body)}}if(shouldInjectCss&&!window.__iconfont__svg__cssinject__){window.__iconfont__svg__cssinject__=true;try{document.write(".svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}")}catch(e){console&&console.log(e)}}ready(appendSvg)})(window)]]>
    </content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fassets%2Ficonfont%2Ficonfont.css</url>
    <content type="text">
      <![CDATA[@font-face {font-family: "iconfont"; src: url('iconfont.eot?t=1525424394764'); /* IE9*/ src: url('iconfont.eot?t=1525424394764#iefix') format('embedded-opentype'), /* IE6-IE8 */ url('data:application/x-font-woff;charset=utf-8;base64,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') format('woff'), url('iconfont.ttf?t=1525424394764') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+*/ url('iconfont.svg?t=1525424394764#iconfont') format('svg'); /* iOS 4.1- */ } .iconfont { font-family:"iconfont" !important; font-size:16px; font-style:normal; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .icon-i:before { content: "\e605"; } .icon-top:before { content: "\e626"; } .icon-category:before { content: "\e68a"; } .icon-Noncommercial:before { content: "\e665"; } .icon-Attribution:before { content: "\e667"; } .icon-No_Derivative_Works:before { content: "\e668"; } .icon-creative_commons_licenses:before { content: "\e669"; } .icon-Share_Alike:before { content: "\e66a"; } .icon-xinlu-logo:before { content: "\e66f"; } .icon-logo:before { content: "\e670"; } .icon-edit-copy:before { content: "\e671"; }]]>
    </content>
  </entry>
</search>
