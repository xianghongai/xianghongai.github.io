(self.webpackChunkfeatures=self.webpackChunkfeatures||[]).push([[289],{9870:(n,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>vn});var t=s(6252);const e=(0,t.Wm)("h1",{id:"栅格结构",tabindex:"-1"},[(0,t.Wm)("a",{class:"header-anchor",href:"#栅格结构","aria-hidden":"true"},"#"),(0,t.Uk)(" 栅格结构")],-1),l=(0,t.Wm)("p",null,"页面由几个主干结构支撑和区分，主干结构 (Site/Page) 内部由多个区块 (Section) 组成的布局，区块作为弹性布局或定宽布局的钩子，可以实现通栏背景。区块内部则是栅格列 (Grid)，格子列里是各模块 (Module) 和组件 (Component)，各模块和组件可有边框、内外边距。",-1),p=(0,t.Wm)("p",null,"栅格的实现：将区域按比例纵 (Column) 横 (Row) 划分成多个单元，各单元间距一致。",-1),o=(0,t.Wm)("p",null,"关键的三个数值：Count (栅格划分的个数)、Width/Height (栅格单元尺寸)、Gutter (槽宽/间距)；",-1),r=(0,t.Uk)("选择了框架和库，会带有网页栅格模块，如 "),c={href:"https://getbootstrap.com/docs/3.3/css/#grid",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Uk)("Bootstrap"),i=(0,t.Uk)("、"),k={href:"https://yuilibrary.com/yui/docs/cssgrids/",target:"_blank",rel:"noopener noreferrer"},m=(0,t.Uk)("YUI"),g=(0,t.Uk)("、"),d={href:"https://ant.design/components/grid/",target:"_blank",rel:"noopener noreferrer"},h=(0,t.Uk)("Ant Design"),W=(0,t.Uk)("、"),b={href:"http://element-cn.eleme.io/#/en-US/component/layout",target:"_blank",rel:"noopener noreferrer"},f=(0,t.Uk)("Element UI"),U=(0,t.Uk)("、"),w={href:"https://www.iviewui.com/components/grid",target:"_blank",rel:"noopener noreferrer"},v=(0,t.Uk)("iView"),_=(0,t.Uk)("；也可以从框架和库中单独抽取栅格部分出来，本篇案例是从 "),x={href:"https://purecss.io/grids/",target:"_blank",rel:"noopener noreferrer"},q=(0,t.Uk)("PureCSS"),y=(0,t.Uk)(" 中抽取："),C=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>section<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>section__wrapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pure-u-3-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token comment">&lt;!-- module --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pure-u-5-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gutter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- module --&gt;</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',1),S=(0,t.Uk)("左右间距的实现有两种方案，如果不考虑IE8以下浏览器，可以直接给列选择器声明 "),P=(0,t.Wm)("code",null,"box-sizing: border-box; padding-right: $grid-gutter-width/2; padding-left: $grid-gutter-width/2;",-1),T=(0,t.Uk)(" 样式属性(要兼容IE8不可给列选择器声明 "),E=(0,t.Wm)("code",null,"min/max-width/height ",-1),I=(0,t.Uk)(")；如果要兼容旧浏览器可以采用 "),R={href:"https://github.com/Schepp/box-sizing-polyfill",target:"_blank",rel:"noopener noreferrer"},z=(0,t.Uk)("polyfill"),D=(0,t.Uk)(" 或在列选择器中再添加一个只用来控制间距的层 "),G=(0,t.Wm)("code",null,'<div class="gutter"></div>',-1),H=(0,t.Uk)("。"),L=(0,t.Wm)("p",null,"栅格用结构层不设置边框和外边距。",-1),M=(0,t.Uk)("传统布局方案可以采用 "),Y=(0,t.Wm)("code",null,"float",-1),$=(0,t.Uk)("、"),j=(0,t.Wm)("code",null,"display: inline-block/table/table-cell",-1),A=(0,t.Uk)("、"),B=(0,t.Wm)("code",null,"position",-1),K=(0,t.Uk)(" 实现，现代浏览器可用采用进入“候选推荐标准”阶段的 "),N={href:"https://www.w3.org/TR/css-flexbox-1/",target:"_blank",rel:"noopener noreferrer"},O=(0,t.Wm)("code",null,"flexbox",-1),V=(0,t.Uk)(" 布局模型；也可以尝试尚在“首个公开工作草案”阶段的 "),F={href:"https://www.w3.org/TR/css-grid-2/",target:"_blank",rel:"noopener noreferrer"},J=(0,t.Wm)("code",null,"grid",-1),Q=(0,t.Uk)(" 布局模型。"),X=(0,t.Wm)("p",null,"经过主干结构和栅格结构，至此文档大致如下图所示：",-1),Z=(0,t.Wm)("p",null,[(0,t.Wm)("img",{src:"/pro-web-reconstruction/assets/pro-web-reconstruction-layout.png",alt:""})],-1),nn=(0,t.Wm)("hr",null,null,-1),an=(0,t.Wm)("p",null,"扩展阅读：",-1),sn={href:"https://blog.csdn.net/xianghongai/article/details/8641840",target:"_blank",rel:"noopener noreferrer"},tn=(0,t.Uk)("网页栅格系统研究(1): 960的秘密"),en={href:"https://blog.csdn.net/xianghongai/article/details/8641853",target:"_blank",rel:"noopener noreferrer"},ln=(0,t.Uk)("网页栅格化研究(2): 蛋糕的切法"),pn={href:"https://blog.csdn.net/xianghongai/article/details/8641875",target:"_blank",rel:"noopener noreferrer"},on=(0,t.Uk)("网页栅格系统研究(3): 粒度问题"),rn={href:"https://blog.csdn.net/xianghongai/article/details/8641887",target:"_blank",rel:"noopener noreferrer"},cn=(0,t.Uk)("网页栅格系统研究(4)：技术实现"),un={href:"https://css-tricks.com/guides/layout/",target:"_blank",rel:"noopener noreferrer"},kn=(0,t.Uk)("The Different Kinds of CSS Layout - CSS-Tricks"),mn={href:"https://blog.csdn.net/xianghongai/article/details/8641916",target:"_blank",rel:"noopener noreferrer"},gn=(0,t.Uk)("渐进增强式布局探讨(上)"),dn={href:"https://blog.csdn.net/xianghongai/article/details/8641924",target:"_blank",rel:"noopener noreferrer"},hn=(0,t.Uk)("渐进增强式布局探讨(下)"),Wn={href:"https://www.w3.org/Consortium/Process/",target:"_blank",rel:"noopener noreferrer"},bn=(0,t.Uk)("W3C Process Document"),fn=(0,t.Wm)("hr",null,null,-1),Un=(0,t.Wm)("p",null,"更新日志：",-1),wn=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"2015-07-19")],-1),vn={render:function(n,a){const s=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[e,l,p,o,(0,t.Wm)("p",null,[r,(0,t.Wm)("a",c,[u,(0,t.Wm)(s)]),i,(0,t.Wm)("a",k,[m,(0,t.Wm)(s)]),g,(0,t.Wm)("a",d,[h,(0,t.Wm)(s)]),W,(0,t.Wm)("a",b,[f,(0,t.Wm)(s)]),U,(0,t.Wm)("a",w,[v,(0,t.Wm)(s)]),_,(0,t.Wm)("a",x,[q,(0,t.Wm)(s)]),y]),C,(0,t.Wm)("p",null,[S,P,T,E,I,(0,t.Wm)("a",R,[z,(0,t.Wm)(s)]),D,G,H]),L,(0,t.Wm)("p",null,[M,Y,$,j,A,B,K,(0,t.Wm)("a",N,[O,(0,t.Wm)(s)]),V,(0,t.Wm)("a",F,[J,(0,t.Wm)(s)]),Q]),X,Z,nn,an,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",sn,[tn,(0,t.Wm)(s)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",en,[ln,(0,t.Wm)(s)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",pn,[on,(0,t.Wm)(s)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",rn,[cn,(0,t.Wm)(s)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",un,[kn,(0,t.Wm)(s)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",mn,[gn,(0,t.Wm)(s)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",dn,[hn,(0,t.Wm)(s)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",Wn,[bn,(0,t.Wm)(s)])])]),fn,Un,wn],64)}}},6258:(n,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>t});const t={key:"v-db97163e",path:"/grid-layout.html",title:"栅格结构",lang:"zh-CN",frontmatter:{},excerpt:'<h1 id="栅格结构" tabindex="-1"><a class="header-anchor" href="#栅格结构" aria-hidden="true">#</a> 栅格结构</h1>\n<p>页面由几个主干结构支撑和区分，主干结构 (Site/Page) 内部由多个区块 (Section) 组成的布局，区块作为弹性布局或定宽布局的钩子，可以实现通栏背景。区块内部则是栅格列 (Grid)，格子列里是各模块 (Module) 和组件 (Component)，各模块和组件可有边框、内外边距。</p>\n',headers:[],filePathRelative:"grid-layout.md",git:{updatedTime:null,contributors:[]}}}}]);